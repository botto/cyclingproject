{"version":3,"sources":["components/TripReview.js","components/PlotView.js","components/NavBar.js","components/Login.js","components/Signup.js","components/TripCard.js","components/Search.js","components/FilterPanel.js","components/Trips.js","components/Profile.js","components/MapViewDetail.js","components/TripDetail.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["TripReview","props","tripData","title","origin_name","origin","destination_name","destination","distance","lng","lat","zoom","duration","difficulty","coordinates","uuid","waypoints","className","onSubmit","event","preventDefault","axios","post","then","response","console","log","htmlFor","id","name","value","onChange","updateTitle","target","type","placeholder","toFixed","mapboxgl","accessToken","PlotView","state","map","draw","reviewTrip","user","removeRoute","getSource","removeLayer","removeSource","updateRoute","data","getAll","lastFeature","document","getElementById","features","length","newCoords","geometry","join","getMatch","e","url","req","XMLHttpRequest","responseType","open","onload","jsonResponse","arr","routes","setState","reverseGeocode","coords","addRoute","getInstructions","send","addLayer","source","properties","layout","paint","legs","tripDirections","i","steps","j","push","maneuver","instruction","componentDidMount","match","params","get","trip","Map","container","mapContainer","style","center","MapBoxGLDraw","displayControlsDefault","controls","line_string","trash","styles","filter","addControl","on","getCenter","getZoom","locality","find","el","place_type","includes","place_name","place","region","goToReviewTrip","text","tripReviewCard","this","onClick","ref","React","Component","NavBar","email","firstName","to","delete","setUser","href","Login","password","message","handleChange","handleSubmit","history","catch","err","process","Signup","lastName","TripCard","trips","_id","Search","updateSearchText","submitSearch","executeSearch","query","FilterPanel","checked","easy","mutate","intermediate","advanced","oneDay","threeDay","oneWeek","hardcore","executeFilter","Trips","filteredTrips","Easy","Intermediate","Advanced","getData","obj","mutateCheckboxBoolean","key","Profile","src","profilePic","alt","userCoords","element","Number","concat","reverse","toF","TripDetail","Home","App","userObj","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c1aed402.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Component } from \"react\";\n\nconst TripReview = props => {\n  const handleChange = event => {\n    props.updateTitle(event.target.value);\n  };\n\n  //   handleSubmit = event => {\n  //     event.preventDefault();\n\n  //     // send to api\n  //     // response from api\n  //     // change state.redirect to true\n  //   };\n\n  // console.log('trip data here:', this.props.tripData);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const {\n      title,\n      origin,\n      origin_name,\n      destination,\n      destination_name,\n      lng,\n      lat,\n      zoom,\n      distance,\n      duration,\n      difficulty,\n      coordinates,\n      uuid,\n      waypoints\n    } = props.tripData;\n\n    // const id = this.state.match.params.\n    axios\n      .post(\"/api/trips/addTrip\", {\n        title,\n        origin,\n        origin_name,\n        destination,\n        destination_name,\n        lng,\n        lat,\n        zoom,\n        distance,\n        duration,\n        difficulty,\n        coordinates,\n        uuid,\n        waypoints\n      })\n      .then(response => {\n        console.log(response);\n      });\n  };\n\n  const {\n    title,\n    origin,\n    origin_name,\n    destination,\n    destination_name,\n    lng,\n    lat,\n    zoom,\n    distance,\n    duration,\n    difficulty,\n    coordinates,\n    uuid,\n    waypoints\n  } = props.tripData;\n\n  // if this.state.redirect --> return <Redirect to=\"/profile\" />\n\n  return (\n    <div>\n      <form className=\"review-trip\" onSubmit={handleSubmit}>\n        <h1>Review your trip</h1>\n        <label htmlFor=\"title\">Trip name</label>\n        <input\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Name your trip\"\n        />\n        <div>\n          <p>Origin: {origin_name}</p>\n          <p>Destination: {destination_name}</p>\n          <p>Duration: {(duration / 60).toFixed(2)} hours</p>\n          <p>Distance: {distance.toFixed(2)} km</p>\n          {/* <p>Waypoints: {waypoints}</p> */}\n          <button>Save this trip</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TripReview;\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapBoxGLDraw from 'mapbox-gl-draw';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport TripReview from './TripReview';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiamFjcXVlbGluZWNoZW4iLCJhIjoiY2s2ZHB5Y2RxMDkxbzNkbXA2bXVzM3JvbiJ9.pUyDxtMWjGqmGgX4JAdL7g';\n\nexport default class PlotView extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  state = {\n    title: '',\n    origin: [],\n    origin_name: '',\n    destination: [],\n    destination_name: '',\n    map: null,\n    draw: null,\n    lng: 5,\n    lat: 34,\n    zoom: 4,\n    uuid: '',\n    duration: '',\n    distance: '',\n    difficulty: '',\n    coordinates: [],\n    waypoints: [],\n    reviewTrip: false,\n    user: '',\n  };\n\n  //\n  removeRoute = () => {\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n      //  document.getElementById('calculated-line').innerHTML = '';\n    } else {\n      return;\n    }\n  };\n\n  updateRoute = () => {\n    this.removeRoute(); // overwrite any existing layers\n    let data = this.state.draw.getAll();\n    let answer = document.getElementById('calculated-line');\n    let lastFeature = data.features.length - 1;\n    let coords = data.features[lastFeature].geometry.coordinates;\n    let newCoords = coords.join(';');\n    this.getMatch(newCoords);\n  };\n\n  getMatch = e => {\n    let url =\n      'https://api.mapbox.com/directions/v5/mapbox/cycling/' +\n      e +\n      '?geometries=geojson&steps=true&&access_token=' +\n      mapboxgl.accessToken;\n\n    let req = new XMLHttpRequest();\n    console.log('req', req);\n    req.responseType = 'json';\n    req.open('GET', url, true);\n    req.onload = () => {\n      let jsonResponse = req.response;\n      let arr = jsonResponse.routes[0].geometry.coordinates;\n      console.log('jsonReponse', jsonResponse);\n      let distance = jsonResponse.routes[0].distance * 0.001;\n\n      let difficulty = '';\n\n      if (distance < 50) {\n        difficulty = 'Easy';\n      } else if (distance >= 150) {\n        difficulty = 'Advanced';\n      } else {\n        difficulty = 'Intermediate';\n      }\n\n      this.setState(\n        {\n          distance: distance,\n          duration: jsonResponse.routes[0].duration / 60,\n          coordinates: jsonResponse.routes[0].geometry.coordinates,\n          uuid: jsonResponse.uuid,\n          waypoints: jsonResponse.waypoints,\n          origin: jsonResponse.routes[0].geometry.coordinates[0],\n          destination: jsonResponse.routes[0].geometry.coordinates[arr.length - 1],\n          difficulty: difficulty,\n        },\n        () => {\n          console.log(this.state);\n\n          this.reverseGeocode();\n        }\n      );\n      // let distance = jsonResponse.routes[0].distance * 0.001;\n      // let duration = jsonResponse.routes[0].duration / 60;\n      console.log(jsonResponse);\n\n      // document.getElementById('calculated-line').innerHTML =\n      // 'Distance: ' + distance.toFixed(2) + ' km<br>Duration: ' + duration.toFixed(2) + ' minutes';\n      let coords = jsonResponse.routes[0].geometry;\n      // add the route to the map\n      this.addRoute(coords);\n      this.getInstructions(jsonResponse.routes[0]);\n    };\n    req.send();\n  };\n\n  addRoute = coords => {\n    // check if the route is already loaded\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n    } else {\n      this.state.map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: coords,\n          },\n        },\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#3b9ddd',\n          'line-width': 8,\n          'line-opacity': 0.8,\n        },\n      });\n    }\n  };\n\n  getInstructions = data => {\n    // Target the sidebar to add the instructions\n    let directions = document.getElementById('directions');\n    let legs = data.legs;\n    let tripDirections = [];\n    // Output the instructions for each step of each leg in the response object\n    for (let i = 0; i < legs.length; i++) {\n      let steps = legs[i].steps;\n      for (let j = 0; j < steps.length; j++) {\n        tripDirections.push('<br><li>' + steps[j].maneuver.instruction + '</li>');\n      }\n    }\n    // directions.innerHTML = '<br><h2>Trip duration: ' + Math.floor(data.duration / 60) + ' min.</h2>' + tripDirections;\n  };\n\n  componentDidMount = () => {\n    const id = this.props.match.params.id;\n    axios.get(`/api/trips/trip/${id}`).then(response => {\n      console.log('response', response);\n      this.setState({\n        trip: response.data,\n      });\n    });\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      duration: this.state.duration,\n      distance: this.state.distance,\n    });\n    // console.log('duration', duration);\n    const draw = new MapBoxGLDraw({\n      displayControlsDefault: false,\n      controls: {\n        line_string: true,\n        trash: true,\n      },\n      styles: [\n        // ACTIVE (being drawn)\n        // line stroke\n        {\n          id: 'gl-draw-line',\n          type: 'line',\n          filter: ['all', ['==', '$type', 'LineString'], ['!=', 'mode', 'static']],\n          layout: {\n            'line-cap': 'round',\n            'line-join': 'round',\n          },\n          paint: {\n            'line-color': '#3b9ddd',\n            'line-dasharray': [0.2, 2],\n            'line-width': 4,\n            'line-opacity': 0.7,\n          },\n        },\n        // vertex point halos\n        {\n          id: 'gl-draw-polygon-and-line-vertex-halo-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#FFF',\n          },\n        },\n        // vertex points\n        {\n          id: 'gl-draw-polygon-and-line-vertex-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 6,\n            'circle-color': '#3b9ddd',\n          },\n        },\n      ],\n    });\n\n    this.setState({ map, draw }, () => {\n      const { map, draw } = this.state;\n\n      // add the draw tool to the map\n      map.addControl(draw);\n\n      // add create, update, or delete actions\n      map.on('draw.create', this.updateRoute);\n      map.on('draw.update', this.updateRoute);\n      map.on('draw.delete', this.removeRoute);\n\n      // Storing new coordinate (whatever the user interacts with)\n      map.on('move', () => {\n        this.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toFixed(2),\n        });\n      });\n    });\n  };\n\n  reverseGeocode = () => {\n    // Reverse geocoding for Origin\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.origin[0]},${this.state.origin[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        console.log('full', response);\n\n        let features = response.data.features;\n        console.log(features);\n\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ origin_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ origin_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ origin_name: region.place_name });\n          return;\n        }\n      });\n\n    // Reverse geocoding with Destination\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.destination[0]},${this.state.destination[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        let features = response.data.features;\n\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ destination_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ destination_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ destination_name: region.place_name });\n          return;\n        }\n      });\n  };\n\n  goToReviewTrip = () => {\n    this.setState({\n      reviewTrip: !this.state.reviewTrip,\n    });\n  };\n\n  updateTitle = text => {\n    this.setState({\n      title: text,\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    let tripReviewCard;\n    let text;\n    if (this.state.reviewTrip) {\n      text = 'Go Back';\n      tripReviewCard = <TripReview tripData={this.state} updateTitle={this.updateTitle} />;\n    } else {\n      text = 'Review Trip';\n    }\n\n    return (\n      <div>\n        {this.state.distance && (\n          <div className=\"sidebarStyle\">\n            {tripReviewCard}\n            <button onClick={this.goToReviewTrip}>{text}</button>\n          </div>\n        )}\n        {!this.state.distance && (\n          <div className=\"popUp\">\n            <p className=\"with-arrow\">Plot out your trip and press enter </p>\n          </div>\n        )}\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport App from \"../App\";\n\nconst NavBar = props => {\n  const logout = () => {\n    axios.delete(\"/api/auth/logout\").then(() => {\n      props.setUser(null);\n    });\n  };\n\n  if (props.user) {\n    console.log(props.user.email);\n    return (\n      <nav className=\"navbar\">\n        <p>hey {props.user.firstName}</p>\n        <div className=\"logo\">\n          <Link to=\"/\">Sykkel</Link>\n        </div>\n        <div className=\"account-links\">\n          <Link onClick={logout} to=\"/\">\n            Logout\n          </Link>\n          <Link to=\"/profile\">Profile</Link>\n          <Link to=\"/plotview\">Plan</Link>\n\n          <Link to=\"/trips\">Explore</Link>\n        </div>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"logo\">\n          <a href=\"/\">Sykkel</a>\n        </div>\n\n        <div className=\"nav-links\">\n          <Link to=\"/login\">Log in</Link>\n          <Link to=\"/signup\">Sign up</Link>\n          <Link to=\"/plotview\">Plan</Link>\n          <Link to=\"/trips\">Explore</Link>\n        </div>\n      </nav>\n    );\n  }\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/login\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log(response.data);\n        this.props.setUser(response.data);\n        this.props.history.push(\"/plotview\");\n      })\n      .catch(err => {\n        console.log(\"error test\");\n        this.setState({\n          message: err.response.data.message\n        });\n        console.log(\"message\", this.state.message);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-box\">\n          <h2>Log in</h2>\n          <div className=\"auth-form\">\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"email\"></label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"password\"></label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <button className=\"auth-btn\" type=\"submit\">\n                  Log in\n                </button>\n              </div>\n            </form>\n            <p>or...</p>\n            <div>\n              <a href={`${process.env.REACT_APP_SERVER_URL}/api/auth/google`}>\n                {\" \"}\n                <button className=\"auth-btn google-btn\">\n                  Log in with Google\n                </button>\n              </a>\n            </div>\n          </div>\n          {this.state.message && <p>{this.state.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class Signup extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    axios\n      .post(\"/api/auth/signup\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        // redirect\n        // update state for user in <App/>\n        this.props.setUser(response.data);\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(\"error test\", err.response.data.message);\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-box\">\n          <h2>Create an Account</h2>\n\n          <div className=\"auth-form\">\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"firstName\"></label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"first name (like Marcel)\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"lastName\"></label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"last name (like Riek)\"\n                  value={this.state.lastName}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"email\"></label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"password\"></label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <button className=\"auth-btn\" type=\"submit\">\n                  Sign up\n                </button>\n              </div>\n            </form>\n            <p>or...</p>\n            <div>\n              <a href={`${process.env.REACT_APP_SERVER_URL}/api/auth/google`}>\n                {\" \"}\n                <button className=\"auth-btn google-btn\">\n                  Sign up with Google\n                </button>\n              </a>\n            </div>\n          </div>\n          {this.state.message && <p>{this.state.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class TripCard extends React.Component {\n  render() {\n    console.log(\"these are our props\", this.props.trips);\n\n    return (\n      <div className=\"trips-list\">\n        {this.props.trips.map(trip => {\n          return (\n            <div className=\"trip-card\">\n              <div className=\"primary-content\">\n                <h2>\n                  <Link to={`/trip/${trip._id}`}>{trip.title}</Link>\n                </h2>\n                <p>From: {trip.origin_name}</p>\n                <p>To: {trip.destination_name}</p>\n                {/* <p>Duration: {(this.props.duration / 60).toFixed(2)} hours</p> */}\n              </div>\n\n              <div className=\"secondary-content\">\n                <div>\n                  <p className=\"caption\">Difficulty</p>\n                  <p className=\"attribute\">\n                    {trip.difficulty ? trip.difficulty : \"N/A\"}\n                  </p>\n                </div>\n\n                <div>\n                  <p className=\"caption\">Distance</p>\n                  <p className=\"attribute\">{trip.distance.toFixed(2)} km</p>\n                </div>\n\n                <div>\n                  <p className=\"caption\">Duration</p>\n                  <p className=\"attribute\">\n                    {(trip.duration / 60).toFixed(2)} hrs\n                  </p>\n                </div>\n\n                <div>\n                  <p className=\"caption\">Elevation gain</p>\n                  <p className=\"attribute\">833 m</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class Search extends React.Component {\n  handleChange = e => {\n    this.props.updateSearchText(e.target.value);\n  };\n\n  submitSearch = e => {\n    this.props.executeSearch();\n  };\n\n  render() {\n    return (\n      <div className=\"search-wrapper\">\n        <input\n          type=\"text\"\n          placeholder=\"Title, origin, or destination\"\n          className=\"search-input\"\n          value={this.props.query}\n          onChange={this.handleChange}\n        />\n        <button className=\"search-button\" onClick={this.submitSearch}>\n          Search\n        </button>\n      </div>\n    );\n  }\n}\n\n// locations (very very vague)\n// duration\n// distance\n// difficulty\n\n// difficulty logic:\n// Easy: < 50km\n// Advance: > 150 km\n// Intermediate: 51 < x < 149\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\n\nexport default class FilterPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"filter-panel\">\n        <div className=\"search-filters\">\n          {/* <p className=\"caption-strong\">Search for a trip</p> */}\n          <Search\n            updateSearchText={this.props.updateSearchText}\n            query={this.props.query}\n            executeSearch={this.props.executeSearch}\n          />\n\n          <p className=\"caption-strong\">Difficulty</p>\n          <label htmlFor=\"Easy\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"Easy\"\n              id=\"Easy\"\n              checked={this.props.easy}\n              onChange={this.props.mutate}\n            />\n            Easy\n          </label>\n\n          <label htmlFor=\"Intermediate\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"Intermediate\"\n              id=\"Intermediate\"\n              checked={this.props.intermediate}\n              onChange={this.props.mutate}\n            />\n            Intermediate\n          </label>\n\n          <label htmlFor=\"Advanced\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"Advanced\"\n              id=\"Advanced\"\n              checked={this.props.advanced}\n              onChange={this.props.mutate}\n            />\n            Advanced\n          </label>\n\n          <br />\n          {/* DURATION */}\n          <p className=\"caption-strong\">Duration</p>\n\n          <label htmlFor=\"oneDay\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"oneDay\"\n              id=\"oneDay\"\n              checked={this.props.oneDay}\n              onChange={this.props.mutate}\n            />\n            1 day ride\n          </label>\n\n          <label htmlFor=\"threeDay\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"threeDay\"\n              id=\"threeDay\"\n              checked={this.props.threeDay}\n              onChange={this.props.mutate}\n            />\n            3 day ride\n          </label>\n\n          <label htmlFor=\"oneWeek\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"oneWeek\"\n              id=\"oneWeek\"\n              checked={this.props.oneWeek}\n              onChange={this.props.mutate}\n            />\n            1 week ride\n          </label>\n\n          <label htmlFor=\"hardcore\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"hardcore\"\n              id=\"hardcore\"\n              checked={this.props.hardcore}\n              onChange={this.props.mutate}\n            />\n            Hardcore\n          </label>\n        </div>\n\n        <div className=\"filter-panel-button\">\n          <button className=\"search-button\" onClick={this.props.executeFilter}>\n            Apply filters\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TripCard from \"./TripCard\";\nimport Search from \"./Search\";\nimport FilterPanel from \"./FilterPanel\";\nimport axios from \"axios\";\n\nexport default class Trips extends Component {\n  state = {\n    trips: [],\n    query: \"\",\n    filteredTrips: [],\n    Easy: false,\n    Intermediate: false,\n    Advanced: false,\n    oneDay: false,\n    threeDay: false,\n    oneWeek: false,\n    hardcore: false\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    // console.log(\"getData()\");\n    axios.get(\"/api/trips/addTrip\").then(response => {\n      this.setState({\n        trips: response.data,\n        filteredTrips: response.data\n      });\n    });\n  };\n\n  updateSearchText = text => {\n    console.log(\"onchange query\", text);\n    this.setState({\n      query: text\n    });\n  };\n\n  executeSearch = () => {\n    let filteredTrips = this.state.trips.filter(obj => {\n      if (\n        obj.title.includes(this.state.query) ||\n        obj.origin_name.includes(this.state.query) ||\n        obj.destination_name.includes(this.state.query)\n      ) {\n        return true;\n      }\n    });\n\n    console.log(\"filtered\", filteredTrips);\n\n    this.setState({\n      filteredTrips: filteredTrips\n    });\n  };\n\n  mutateCheckboxBoolean = e => {\n    let key = e.target.name;\n    this.setState({ [key]: !this.state[key] }, () => {\n      console.log(key, this.state[key]);\n    });\n  };\n\n  executeFilter = e => {\n    e.preventDefault();\n\n    let filteredTrips = this.state.trips.filter(trip => {\n      return (\n        (this.state.Easy && trip.difficulty === \"Easy\") ||\n        (this.state.Intermediate && trip.difficulty === \"Intermediate\") ||\n        (this.state.Advanced && trip.difficulty === \"Advanced\") ||\n        (this.state.oneDay && trip.duration <= 360) ||\n        (this.state.threeDay && 360 < trip.duration <= 1080) ||\n        (this.state.oneWeek && 1080 < trip.duration <= 2520) ||\n        (this.state.hardcore && trip.duration > 2520)\n      );\n    });\n\n    this.setState({\n      filteredTrips: filteredTrips\n    });\n\n    // let query = {};\n\n    // Object.keys(this.state).forEach(key => {\n    //   console.log(\"object values\", key);\n    //   if (this.state[key] === true) {\n    //     query[key] = this.state[key];\n    //     // queryKeys.push(key);\n    //   }\n    //   return query;\n    // });\n    // console.log(\"done arr\", query);\n\n    // let filteredResults = this.state.trips.filter(search, query);\n\n    // function search(trip) {\n    //   return Object.keys(this).every(key => trip[key] === this[key]);\n    // }\n\n    // console.log(\"filteredResults\", filteredResults);\n\n    // let filteredList = this.state.trips.filter(trip => {\n    //   for (const key in truthy) {\n    //     if (trip[key] !== truthy[key]) return false;\n    //   }\n    //   return true;\n    // });\n\n    // console.log(\"filtered list:\", filteredList);\n\n    // users= users.filter(function(item) {\n    //   for (var key in filter) {\n    //     if (item[key] === undefined || item[key] != filter[key])\n    //       return false;\n    //   }\n    //   return true;\n    // });\n\n    // const place = features.find(el => el.place_type.includes(\"place\"));\n    // if (place) {\n    //   this.setState({ destination_name: place.place_name });\n    //   return;\n    // }\n\n    // let filteredList = this.state.trips.filter(trip => {\n    //   for (const key of arr) {\n    //     if (trip.key) {\n    //       return true;\n    //     }\n    //   }\n    // });\n    // console.log(filteredList);\n  };\n\n  render() {\n    // let filterTrips;\n    // this.state.trips.map(trip => {\n    //   //\n    // });\n    return (\n      <div className=\"wrapper\">\n        <div className=\"filter-wrapper\">\n          <FilterPanel\n            updateSearchText={this.updateSearchText}\n            easy={this.state.easy}\n            mutate={this.mutateCheckboxBoolean}\n            query={this.state.query}\n            executeSearch={this.executeSearch}\n            executeFilter={this.executeFilter}\n          />\n        </div>\n        {/* <Search\n          updateSearchText={this.updateSearchText}\n          query={this.state.query}\n          executeSearch={this.executeSearch}\n        /> */}\n        <div className=\"trips-wrapper\">\n          <TripCard trips={this.state.filteredTrips} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TripCard from \"./TripCard\";\n\nclass Profile extends React.Component {\n  // state = {};\n\n  render() {\n    console.log(\"props\", this.props.setUser);\n    console.log(\"user\", this.props.user);\n    return (\n      <div className=\"profile-container\">\n        <div className=\"info-wrapper\">\n          <h2>\n            {this.props.user.firstName} {this.props.user.lastName}\n          </h2>\n          <div className=\"image-wrapper\">\n            <img\n              className=\"profile-img\"\n              src={this.props.user.profilePic}\n              alt=\"Profile Image\"\n            />\n          </div>\n          <p>\n            Email: <span>{this.props.user.email}</span>\n          </p>\n        </div>\n        <div className=\"trips-wrapper\">\n          <h2>My Trips</h2>\n          <div>{/* <TripCard /> */}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapBoxGLDraw from 'mapbox-gl-draw';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport TripReview from './TripReview';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiamFjcXVlbGluZWNoZW4iLCJhIjoiY2s2ZHB5Y2RxMDkxbzNkbXA2bXVzM3JvbiJ9.pUyDxtMWjGqmGgX4JAdL7g';\n\nexport default class PlotView extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  state = {\n    title: '',\n    origin: [],\n    origin_name: '',\n    destination: [],\n    destination_name: '',\n    map: null,\n    draw: null,\n    lng: 5,\n    lat: 34,\n    zoom: 4,\n    uuid: '',\n    duration: '',\n    distance: '',\n    coordinates: [],\n    waypoints: [],\n    reviewTrip: false,\n  };\n\n  //\n  removeRoute = () => {\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n      //  document.getElementById('calculated-line').innerHTML = '';\n    } else {\n      return;\n    }\n  };\n\n  updateRoute = () => {\n    this.removeRoute(); // overwrite any existing layers\n    let data = this.state.draw.getAll();\n    let answer = document.getElementById('calculated-line');\n    let lastFeature = data.features.length - 1;\n    let coords = data.features[lastFeature].geometry.coordinates;\n    let newCoords = coords.join(';');\n    this.getMatch(newCoords);\n  };\n  // let primes = arr1.concat(arr2);\n\n  getMatch = e => {\n    let url =\n      'https://api.mapbox.com/directions/v5/mapbox/cycling/' +\n      e +\n      '?geometries=geojson&steps=true&&access_token=' +\n      mapboxgl.accessToken;\n    let userCoords = this.props.coordinates.map(element => {\n      return element.map(el => {\n        // let number = +el.toFixed(12);\n        // let difference = 12 - el.length;\n        let number = Number(el.toFixed(11) + '1');\n        return number;\n      });\n    });\n    let req = new XMLHttpRequest();\n    console.log('req', req);\n    req.responseType = 'json';\n    req.open('GET', url, true);\n    req.onload = () => {\n      let jsonResponse = req.response;\n      let arr = jsonResponse.routes[0].geometry.coordinates;\n      console.log('jsonReponse', jsonResponse);\n      this.setState(\n        {\n          distance: jsonResponse.routes[0].distance * 0.001,\n          duration: jsonResponse.routes[0].duration / 60,\n          coordinates: jsonResponse.routes[0].geometry.coordinates.concat(userCoords.reverse()),\n          uuid: jsonResponse.uuid,\n          waypoints: jsonResponse.waypoints,\n          origin: jsonResponse.routes[0].geometry.coordinates[0],\n          destination: jsonResponse.routes[0].geometry.coordinates[arr.length - 1],\n        },\n        () => {\n          console.log(this.state);\n\n          this.reverseGeocode();\n        }\n      );\n      // let distance = jsonResponse.routes[0].distance * 0.001;\n      // let duration = jsonResponse.routes[0].duration / 60;\n      console.log(jsonResponse);\n\n      // document.getElementById('calculated-line').innerHTML =\n      // 'Distance: ' + distance.toF + ' km<br>Duration: ' + duration.toF + ' minutes';\n      let coords = jsonResponse.routes[0].geometry;\n      // add the route to the map\n      this.addRoute(coords);\n      this.getInstructions(jsonResponse.routes[0]);\n    };\n    req.send();\n  };\n\n  addRoute = coords => {\n    // check if the route is already loaded\n    if (this.state.map.getSource('route')) {\n      this.state.map.removeLayer('route');\n      this.state.map.removeSource('route');\n    } else {\n      this.state.map.addLayer({\n        id: 'route',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: coords,\n          },\n        },\n        layout: {\n          'line-join': 'round',\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#3b9ddd',\n          'line-width': 8,\n          'line-opacity': 0.8,\n        },\n      });\n    }\n  };\n\n  getInstructions = data => {\n    // Target the sidebar to add the instructions\n    let directions = document.getElementById('directions');\n    let legs = data.legs;\n    let tripDirections = [];\n    // Output the instructions for each step of each leg in the response object\n    for (let i = 0; i < legs.length; i++) {\n      let steps = legs[i].steps;\n      for (let j = 0; j < steps.length; j++) {\n        tripDirections.push('<br><li>' + steps[j].maneuver.instruction + '</li>');\n      }\n    }\n    // directions.innerHTML = '<br><h2>Trip duration: ' + Math.floor(data.duration / 60) + ' min.</h2>' + tripDirections;\n  };\n\n  componentDidMount = () => {\n    let userCoords = this.props.coordinates.map(element => {\n      element.reverse();\n      return element;\n    });\n\n    console.log('initial declaration', userCoords);\n    console.log('testing origin', this.props.origin[0]);\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.props.origin[0], this.props.origin[1]],\n      zoom: this.state.zoom,\n      duration: this.state.duration,\n      distance: this.state.distance,\n    });\n    // console.log('duration', duration);\n    const draw = new MapBoxGLDraw({\n      displayControlsDefault: false,\n      controls: {\n        line_string: true,\n        trash: true,\n      },\n      styles: [\n        // ACTIVE (being drawn)\n        // line stroke\n        {\n          id: 'gl-draw-line',\n          type: 'line',\n          filter: ['all', ['==', '$type', 'LineString'], ['!=', 'mode', 'static']],\n          layout: {\n            'line-cap': 'round',\n            'line-join': 'round',\n          },\n          paint: {\n            'line-color': '#3b9ddd',\n            'line-dasharray': [0.2, 2],\n            'line-width': 4,\n            'line-opacity': 0.7,\n          },\n        },\n        // vertex point halos\n        {\n          id: 'gl-draw-polygon-and-line-vertex-halo-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#FFF',\n          },\n        },\n        // vertex points\n        {\n          id: 'gl-draw-polygon-and-line-vertex-active',\n          type: 'circle',\n          filter: ['all', ['==', 'meta', 'vertex'], ['==', '$type', 'Point'], ['!=', 'mode', 'static']],\n          paint: {\n            'circle-radius': 6,\n            'circle-color': '#3b9ddd',\n          },\n        },\n      ],\n    });\n\n    map.on('load', () => {\n      // console.log(\"On Load coords\", userCoords);\n      console.log('props', this.props);\n      let workingCoords = [\n        [40.998026998026, 14.098482998026],\n        [41.020649020649, 14.098132020649],\n        [41.020474020649, 14.110666020649],\n        [41.024281020649, 14.107097020649],\n        [41.044168020649, 14.100123020649],\n        [41.044122020649, 14.087687020649],\n        [41.065196020649, 14.101628020649],\n        [41.086844020649, 14.102352020649],\n        [41.087572020649, 14.104416020649],\n        [41.093916020649, 14.106363020649],\n        [41.097221020649, 14.104472020649],\n        [41.108311020649, 14.109544020649],\n        [41.130772020649, 14.060963020649],\n        [41.134644020649, 14.064113020649],\n        [41.137796020649, 14.053121020649],\n      ];\n      let userCoords = this.props.coordinates.map(element => {\n        return element.reverse().map(el => {\n          // let number = +el.toFixed(12);\n          let difference = 12 - el.length;\n          let number = Number(el.toFixed(11) + '1');\n          return number;\n        });\n      });\n      console.log('hacked userCoords', userCoords);\n      console.log('Working Coords', workingCoords);\n      map.addLayer({\n        id: 'layer1',\n        type: 'line',\n        source: {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            geometry: {\n              type: 'LineString',\n              coordinates: userCoords,\n            },\n          },\n        },\n        layout: {\n          'line-join': 'round',\n\n          'line-cap': 'round',\n        },\n        paint: {\n          'line-color': '#888',\n          'line-width': 8,\n        },\n      });\n\n      // map.addSource(\"route\", {\n      //   type: \"geojson\",\n      //   data: {\n      //     type: \"Feature\",\n      //     properties: {},\n      //     geometry: {\n      //       type: \"LineString\",\n      //       coordinates: [userCoords]\n      //     }\n      //   }\n      // });\n      // map.addLayer({\n      //   id: \"route\",\n      //   type: \"line\",\n      //   source: \"route\",\n      //   layout: {\n      //     \"line-join\": \"round\",\n      //     \"line-cap\": \"round\"\n      //   },\n      //   paint: {\n      //     \"line-color\": \"#888\",\n      //     \"line-width\": 8\n      //   }\n      // });\n    });\n\n    this.setState({ map, draw }, () => {\n      const { map, draw } = this.state;\n\n      // add the draw tool to the map\n      map.addControl(draw);\n\n      // add create, update, or delete actions\n      map.on('draw.create', this.updateRoute);\n      map.on('draw.update', this.updateRoute);\n      map.on('draw.delete', this.removeRoute);\n\n      // Storing new coordinate (whatever the user interacts with)\n      map.on('move', () => {\n        this.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toF,\n        });\n      });\n    });\n  };\n\n  reverseGeocode = () => {\n    // Reverse geocoding for Origin\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.origin[0]},${this.state.origin[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        console.log('full', response);\n\n        let features = response.data.features;\n        console.log(features);\n\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ origin_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ origin_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ origin_name: region.place_name });\n          return;\n        }\n      });\n\n    // Reverse geocoding with Destination\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.destination[0]},${this.state.destination[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        console.log('full', response);\n\n        let features = response.data.features;\n        console.log(features);\n\n        const locality = features.find(el => el.place_type.includes('locality'));\n        if (locality) {\n          this.setState({ destination_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes('place'));\n        if (place) {\n          this.setState({ destination_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes('region'));\n        if (region) {\n          this.setState({ destination_name: region.place_name });\n          return;\n        }\n      });\n  };\n\n  goToReviewTrip = () => {\n    this.setState({\n      reviewTrip: !this.state.reviewTrip,\n    });\n  };\n\n  updateTitle = text => {\n    this.setState({\n      title: text,\n    });\n  };\n\n  render() {\n    let tripReviewCard;\n    let text;\n    if (this.state.reviewTrip) {\n      text = 'Go Back';\n      tripReviewCard = <TripReview tripData={this.state} updateTitle={this.updateTitle} />;\n    } else {\n      text = 'Save This Trip!';\n    }\n\n    return (\n      <div>\n        {this.state.distance && (\n          <div className=\"sidebarStyle\">\n            {tripReviewCard}\n            <button onClick={this.goToReviewTrip}>{text}</button>\n          </div>\n        )}\n        {!this.state.distance && (\n          <div className=\"popUp\">\n            <p>Plot out your trip and press enter </p>\n          </div>\n        )}\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport MapView from './MapViewDetail';\n\nexport default class TripDetail extends Component {\n  state = {\n    trip: null,\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    console.log('ide value', id);\n\n    axios.get(`/api/trips/trip/${id}`).then(response => {\n      console.log('response', response);\n      this.setState({\n        trip: response.data,\n      });\n      console.log('Test the state:', this.state);\n    });\n  }\n\n  render() {\n    {\n      const trip = this.state.trip;\n\n      if (!trip) {\n        return <div>No Trips Match Your Search</div>;\n      }\n      return (\n        <>\n          <h1>{trip.title}</h1>\n          <p>{trip.duration}</p>\n          <p>{trip.distance}</p>\n          <MapView coordinates={trip.coordinates} origin={trip.origin} />\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"home-container\">\n        <div className=\"main\">\n          <h1>\n            <span>Sykkel</span>\n          </h1>\n          <div className=\"intro\">\n            <p>Cycling. Really far.</p>\n            <p>What would you like to do?</p>\n          </div>\n          <div className=\"home-btns-wrapper\">\n            <Link to=\"/plotview\">\n              <button className=\"home-btn\">Plan a new Trip</button>\n            </Link>\n            <Link to=\"/trips\">\n              <button className=\"home-btn\">Explore saved Trips</button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"mainphone\">\n          <img\n            className=\"phone\"\n            src=\"https://github.com/timbotimber/cyclingproject/blob/master/client/public/img/mobile_first.001.png?raw=true\"\n            alt=\"phone\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport PlotView from \"./components/PlotView\";\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport TripReview from \"./components/TripReview\";\nimport Trips from \"./components/Trips\";\nimport Profile from \"./components/Profile\";\nimport TripDetail from \"./components/TripDetail\";\nimport Home from \"./components/Home\";\n// import Test from './components/Test';\n\n// testing out context:\n// create new context\n// const MyContext = React.createContext();\n\n// // create provider component\n// class MyProvider extends React.Component {\n//   state = {\n//     user: this.props.user\n//   };\n\n//   render() {\n//     return (\n//       <MyContext.Provider value={{ state: this.state }}>\n//         {this.props.children}\n//       </MyContext.Provider>\n//     );\n//   }\n// }\n\n// Context test until here ----------------------------\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  render() {\n    // const id = this.props.match.params.tripId;\n    return (\n      // <MyProvider>\n      <div className=\"App\">\n        <NavBar setUser={this.setUser} user={this.state.user} />\n        <div className=\"content\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/plotview\" component={PlotView} />\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login history={props.history} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path=\"/signup\"\n            render={props => (\n              <Signup history={props.history} setUser={this.setUser} />\n            )}\n          />\n          <Route path=\"/trips\" component={Trips} />\n          <Route path=\"/trip/:id\" component={TripDetail} />\n          <Route\n            path=\"/profile\"\n            render={props => (\n              <Profile setUser={this.setUser} user={this.state.user} />\n            )}\n          />\n        </div>\n      </div>\n      // </MyProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}