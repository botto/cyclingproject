{"version":3,"sources":["components/PlotView.js","components/TripReview.js","components/NavBar.js","components/Login.js","components/Signup.js","components/TripCard.js","components/Search.js","components/FilterPanel.js","components/Trips.js","components/Profile.js","components/MapViewDetail.js","components/TripDetail.js","components/Home.js","components/ElevationChart.js","App.js","serviceWorker.js","index.js"],"names":["map","withRouter","props","tripData","title","origin_name","origin","destination_name","destination","distance","lng","lat","zoom","duration","elevation_gain","difficulty","elevations","coordinates","uuid","waypoints","className","onSubmit","event","preventDefault","axios","post","then","response","console","log","history","push","id","name","value","onChange","updateTitle","target","type","placeholder","toFixed","mapboxgl","accessToken","PlotView","state","draw","reviewTrip","user","removeRoute","getSource","removeLayer","removeSource","updateRoute","data","getAll","lastFeature","document","getElementById","features","length","newCoords","geometry","join","getMatch","e","url","req","XMLHttpRequest","responseType","open","onload","jsonResponse","arr","routes","setState","snapToBounds","reverseGeocode","getElevations","calculateGain","coords","addRoute","getInstructions","send","a","promises","coord","get","feature","properties","ele","Promise","all","gain","i","realisticGain","addLayer","source","layout","paint","legs","tripDirections","steps","j","maneuver","instruction","componentDidMount","match","params","trip","Map","container","mapContainer","style","center","MapBoxGLDraw","displayControlsDefault","controls","line_string","trash","styles","filter","addControl","on","getCenter","getZoom","locality","find","el","place_type","includes","place_name","place","region","goToReviewTrip","text","bounds","reduce","extend","LngLatBounds","fitBounds","padding","tripReviewCard","this","onClick","ref","React","Component","NavBar","email","firstName","to","delete","setUser","href","Login","password","message","handleChange","handleSubmit","catch","err","htmlFor","process","Signup","lastName","TripCard","userInfo","fave","somethingDeleted","getData","faveTrip","liked_trips","deleteTrip","deleteOne","trips","_id","src","alt","Search","updateSearchText","submitSearch","executeSearch","query","FilterPanel","checked","easy","mutate","intermediate","advanced","oneDay","threeDay","oneWeek","hardcore","executeFilter","Trips","filteredTrips","Easy","Intermediate","Advanced","obj","mutateCheckboxBoolean","key","filteredArray","elem","Profile","button_state_trips","button_style_trips","button_state_favs","button_style_favs","showFavorites","profilePic","userCoords","element","combinedCoords","concat","reverse","toF","TripDetail","Home","ElevationChart","chartRef","createRef","Origin","Destination","createChart","myChartRef","current","getContext","xAxis","Chart","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","options","bezierCurve","elements","point","radius","scales","xAxes","gridLines","color","yAxes","res","App","userObj","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6f5321b7.chunk.js","sourcesContent":["import React from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapBoxGLDraw from \"mapbox-gl-draw\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport TripReview from \"./TripReview\";\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiamFjcXVlbGluZWNoZW4iLCJhIjoiY2s2ZHB5Y2RxMDkxbzNkbXA2bXVzM3JvbiJ9.pUyDxtMWjGqmGgX4JAdL7g\";\n\nlet map;\n\nexport default class PlotView extends React.Component {\n  state = {\n    title: \"\",\n    origin: [],\n    origin_name: \"\",\n    destination: [],\n    destination_name: \"\",\n    map: null,\n    draw: null,\n    lng: 5,\n    lat: 34,\n    zoom: 4,\n    uuid: \"\",\n    duration: \"\",\n    distance: \"\",\n    difficulty: \"\",\n    elevations: [],\n    elevation_gain: 0,\n    coordinates: [],\n    waypoints: [],\n    reviewTrip: false,\n    user: \"\"\n  };\n\n  // REMOVE ROUTE\n  removeRoute = () => {\n    if (this.state.map.getSource(\"route\")) {\n      this.state.map.removeLayer(\"route\");\n      this.state.map.removeSource(\"route\");\n      //  document.getElementById('calculated-line').innerHTML = '';\n    } else {\n      return;\n    }\n  };\n\n  // UPDATE ROUTE\n  updateRoute = () => {\n    this.removeRoute(); // overwrite any existing layers\n    let data = this.state.draw.getAll();\n    let answer = document.getElementById(\"calculated-line\");\n    let lastFeature = data.features.length - 1;\n    let coords = data.features[lastFeature].geometry.coordinates;\n    let newCoords = coords.join(\";\");\n    this.getMatch(newCoords);\n  };\n\n  // RENDERING MATCHED ROUTE\n  getMatch = e => {\n    let url =\n      \"https://api.mapbox.com/directions/v5/mapbox/cycling/\" +\n      e +\n      \"?geometries=geojson&steps=true&&access_token=\" +\n      mapboxgl.accessToken;\n    let req = new XMLHttpRequest();\n    // console.log(\"req\", req);\n    req.responseType = \"json\";\n    req.open(\"GET\", url, true);\n    req.onload = () => {\n      let jsonResponse = req.response;\n      let arr = jsonResponse.routes[0].geometry.coordinates;\n      // console.log(\"jsonReponse\", jsonResponse);\n      // CALCULATING DIFFICULTY LEVEL BASED ON DISTANCE\n      let distance = jsonResponse.routes[0].distance * 0.001;\n      let difficulty = \"\";\n      if (distance < 50) {\n        difficulty = \"Easy\";\n      } else if (distance >= 150) {\n        difficulty = \"Advanced\";\n      } else {\n        difficulty = \"Intermediate\";\n      }\n      this.setState(\n        {\n          distance: distance,\n          duration: jsonResponse.routes[0].duration / 60,\n          coordinates: jsonResponse.routes[0].geometry.coordinates,\n          uuid: jsonResponse.uuid,\n          waypoints: jsonResponse.waypoints,\n          origin: jsonResponse.routes[0].geometry.coordinates[0],\n          destination:\n            jsonResponse.routes[0].geometry.coordinates[arr.length - 1],\n          difficulty: difficulty\n        },\n        () => {\n          console.log(this.state);\n          this.snapToBounds();\n          this.reverseGeocode();\n          this.getElevations().then(response => {\n            console.log(\"response\", response);\n\n            this.calculateGain(response);\n          });\n          // console.log(this.getElevations());\n          // console.log(\"coordinates\", this.state.coordinates);\n        }\n      );\n\n      let coords = jsonResponse.routes[0].geometry;\n      // add the route to the map\n      this.addRoute(coords);\n      this.getInstructions(jsonResponse.routes[0]);\n    };\n    req.send();\n  };\n\n  // RETRIEVE ELEVATION DATA\n  getElevations = async () => {\n    let elevations = [];\n\n    let promises = this.state.coordinates.map(coord => {\n      return axios\n        .get(\n          `https://api.mapbox.com/v4/mapbox.mapbox-terrain-v2/tilequery/${coord[0]},${coord[1]}.json?layers=contour&limit=50&access_token=${mapboxgl.accessToken}`\n        )\n        .then(response => {\n          response = response.data.features;\n          for (const feature of response) {\n            elevations.push(feature.properties.ele);\n          }\n        });\n    });\n    console.log(\"elevations\", elevations);\n    await Promise.all(promises);\n    this.setState({\n      elevations: elevations\n    });\n    return elevations;\n  };\n\n  // CALCULATING ELEVATION GAIN\n  calculateGain = arr => {\n    console.log(arr);\n    let gain = 0;\n    for (let i = 1; i < arr.length; i++) {\n      if (arr[i] > arr[i - 1]) {\n        gain += arr[i] - arr[i - 1];\n      }\n    }\n    console.log(\"gain\", gain);\n    let realisticGain = gain / 2;\n    this.setState({\n      elevation_gain: realisticGain\n    });\n  };\n\n  // ADD ROUTE\n  addRoute = coords => {\n    // check if the route is already loaded\n    if (this.state.map.getSource(\"route\")) {\n      this.state.map.removeLayer(\"route\");\n      this.state.map.removeSource(\"route\");\n    } else {\n      this.state.map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            properties: {},\n            geometry: coords\n          }\n        },\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#ff6962\",\n          \"line-width\": 8,\n          \"line-opacity\": 0.8\n        }\n      });\n    }\n  };\n\n  // GET NAVIGATION INSTRUCTIONS\n  getInstructions = data => {\n    // Target the sidebar to add the instructions\n    let directions = document.getElementById(\"directions\");\n    let legs = data.legs;\n    let tripDirections = [];\n    // Output the instructions for each step of each leg in the response object\n    for (let i = 0; i < legs.length; i++) {\n      let steps = legs[i].steps;\n      for (let j = 0; j < steps.length; j++) {\n        tripDirections.push(\n          \"<br><li>\" + steps[j].maneuver.instruction + \"</li>\"\n        );\n      }\n    }\n    // directions.innerHTML = '<br><h2>Trip duration: ' + Math.floor(data.duration / 60) + ' min.</h2>' + tripDirections;\n  };\n\n  // COMPONENT DID MOUNT\n  componentDidMount = () => {\n    const id = this.props.match.params.id;\n    axios.get(`/api/trips/trip/${id}`).then(response => {\n      console.log(\"response\", response);\n      this.setState({\n        trip: response.data\n      });\n    });\n    map = new mapboxgl.Map({\n      container: this.mapContainer,\n      // style: \"mapbox://styles/mapbox/streets-v11\",\n      style: \"mapbox://styles/mapbox/outdoors-v11\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      duration: this.state.duration,\n      distance: this.state.distance\n    });\n    // console.log('duration', duration);\n    const draw = new MapBoxGLDraw({\n      displayControlsDefault: false,\n      controls: {\n        line_string: true,\n        trash: true\n      },\n      styles: [\n        // ACTIVE (being drawn)\n        // line stroke\n        {\n          id: \"gl-draw-line\",\n          type: \"line\",\n          filter: [\n            \"all\",\n            [\"==\", \"$type\", \"LineString\"],\n            [\"!=\", \"mode\", \"static\"]\n          ],\n          layout: {\n            \"line-cap\": \"round\",\n            \"line-join\": \"round\"\n          },\n          paint: {\n            \"line-color\": \"#ff6962\", // Color: \"sky\"\n            \"line-dasharray\": [0.2, 2],\n            \"line-width\": 4,\n            \"line-opacity\": 1.0\n          }\n        },\n        // vertex point halos\n        {\n          id: \"gl-draw-polygon-and-line-vertex-halo-active\",\n          type: \"circle\",\n          filter: [\n            \"all\",\n            [\"==\", \"meta\", \"vertex\"],\n            [\"==\", \"$type\", \"Point\"],\n            [\"!=\", \"mode\", \"static\"]\n          ],\n          paint: {\n            \"circle-radius\": 10,\n            \"circle-color\": \"#FFF\"\n          }\n        },\n        // vertex points\n        {\n          id: \"gl-draw-polygon-and-line-vertex-active\",\n          type: \"circle\",\n          filter: [\n            \"all\",\n            [\"==\", \"meta\", \"vertex\"],\n            [\"==\", \"$type\", \"Point\"],\n            [\"!=\", \"mode\", \"static\"]\n          ],\n          paint: {\n            \"circle-radius\": 6,\n            \"circle-color\": \"#ff6962\"\n          }\n        }\n      ]\n    });\n    this.setState({ map, draw }, () => {\n      const { map, draw } = this.state;\n      // add the draw tool to the map\n      map.addControl(draw);\n      // add create, update, or delete actions\n      map.on(\"draw.create\", this.updateRoute);\n      map.on(\"draw.update\", this.updateRoute);\n      map.on(\"draw.delete\", this.removeRoute);\n      // Storing new coordinate (whatever the user interacts with)\n      map.on(\"move\", () => {\n        this.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toFixed(2)\n        });\n      });\n    });\n  };\n\n  // REVERSE GEOCODING: GETTING LOCATION NAME FROM COORDINATES\n  reverseGeocode = () => {\n    // Origin\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.origin[0]},${this.state.origin[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        // console.log(\"full\", response);\n        let features = response.data.features;\n        // console.log(features);\n        const locality = features.find(el =>\n          el.place_type.includes(\"locality\")\n        );\n        if (locality) {\n          this.setState({ origin_name: locality.place_name });\n          return;\n        }\n        const place = features.find(el => el.place_type.includes(\"place\"));\n        if (place) {\n          this.setState({ origin_name: place.place_name });\n          return;\n        }\n        const region = features.find(el => el.place_type.includes(\"region\"));\n        if (region) {\n          this.setState({ origin_name: region.place_name });\n          return;\n        }\n      });\n    // Destination\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.destination[0]},${this.state.destination[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        let features = response.data.features;\n        const locality = features.find(el =>\n          el.place_type.includes(\"locality\")\n        );\n        if (locality) {\n          this.setState({ destination_name: locality.place_name });\n          return;\n        }\n        const place = features.find(el => el.place_type.includes(\"place\"));\n        if (place) {\n          this.setState({ destination_name: place.place_name });\n          return;\n        }\n        const region = features.find(el => el.place_type.includes(\"region\"));\n        if (region) {\n          this.setState({ destination_name: region.place_name });\n          return;\n        }\n      });\n  };\n\n  // TOGGLE MAP SIDEBAR VIEW\n  goToReviewTrip = () => {\n    this.setState({\n      reviewTrip: !this.state.reviewTrip\n    });\n  };\n\n  // UPDATE TITLE OF TRIP\n  updateTitle = text => {\n    this.setState({\n      title: text\n    });\n  };\n\n  // ROUTE: ZOOM TO FIT\n  snapToBounds = () => {\n    let coordinates = this.state.coordinates;\n    let bounds = coordinates.reduce((bounds, coord) => {\n      return bounds.extend(coord);\n    }, new mapboxgl.LngLatBounds(coordinates[0], coordinates[0]));\n\n    map.fitBounds(bounds, {\n      padding: 100\n    });\n  };\n\n  render() {\n    // console.log(this.state);\n    let tripReviewCard;\n    let text;\n    if (this.state.reviewTrip) {\n      text = \"Go Back\";\n      tripReviewCard = (\n        <div className=\"sidebarReview\">\n          <TripReview tripData={this.state} updateTitle={this.updateTitle} />\n        </div>\n      );\n    } else {\n      text = \"Check out your Details!\";\n    }\n    return (\n      <div>\n        {this.state.distance && (\n          <div className=\"sidebar\">\n            {tripReviewCard}\n            <button className=\"button-solid\" onClick={this.goToReviewTrip}>\n              {text}\n            </button>\n          </div>\n        )}\n        {!this.state.distance && (\n          <div className=\"popUp\">\n            <p className=\"caption-strong\">\n              Plot out your trip and press enter{\" \"}\n            </p>\n          </div>\n        )}\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n// ReactDOM.render(<App />, document.getElementById('app'));\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { Component } from \"react\";\nconst TripReview = props => {\n  const handleChange = event => {\n    props.updateTitle(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      title,\n      origin,\n      origin_name,\n      destination,\n      destination_name,\n      lng,\n      lat,\n      zoom,\n      distance,\n      duration,\n      difficulty,\n      elevations,\n      elevation_gain,\n      coordinates,\n      uuid,\n      waypoints\n    } = props.tripData;\n    // const id = this.state.match.params.\n    axios\n      .post(\"/api/trips/addTrip\", {\n        title,\n        origin,\n        origin_name,\n        destination,\n        destination_name,\n        lng,\n        lat,\n        zoom,\n        distance,\n        duration,\n        difficulty,\n        elevations,\n        elevation_gain,\n        coordinates,\n        uuid,\n        waypoints\n      })\n      .then(response => {\n        console.log(response);\n        props.history.push(\"/profile\");\n      });\n  };\n  const {\n    title,\n    origin,\n    origin_name,\n    destination,\n    destination_name,\n    lng,\n    lat,\n    zoom,\n    distance,\n    duration,\n    difficulty,\n    elevations,\n    elevation_gain,\n    coordinates,\n    uuid,\n    waypoints\n  } = props.tripData;\n\n  return (\n    <div>\n      <form className=\"review-trip\" onSubmit={handleSubmit}>\n        <h2>Review your trip</h2>\n        <div className=\"vertical-space\"></div>\n        <p className=\"caption-strong\">Trip Name:</p>\n\n        <input\n          className=\"input-text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Name your trip\"\n        />\n        <div className=\"divider\"></div>\n        <div>\n          <p className=\"caption-strong\">Origin:</p>\n          <p>{origin_name}</p>\n          <br />\n          <p className=\"caption-strong\">Destination:</p>\n          <p>{destination_name}</p>\n          <br />\n          <div className=\"review-trip-attributes\">\n            <div>\n              <p className=\"caption-strong\">Duration:</p>\n              <p>{(duration / 60).toFixed(2)} hours</p>\n            </div>\n            <div>\n              <p className=\"caption-strong\">Distance:</p>\n              <p>{distance.toFixed(2)} km</p>\n            </div>\n            <div>\n              <p className=\"caption-strong\">Elevation gain:</p>\n              <p>{elevation_gain} m</p>\n            </div>\n          </div>\n          <br />\n          <button className=\"button-solid\">Save this trip</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default withRouter(TripReview);\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport App from \"../App\";\n\nconst NavBar = props => {\n  const logout = () => {\n    axios.delete(\"/api/auth/logout\").then(() => {\n      props.setUser(null);\n    });\n  };\n\n  if (props.user) {\n    console.log(props.user.email);\n    return (\n      <nav className=\"navbar\">\n        {props.user.firstName && (\n          <div className=\"nav-greeting\">\n            <p>👋🏻 Hey {props.user.firstName}!</p>\n          </div>\n        )}\n        <div className=\"logo\">\n          <Link to=\"/\">Sykkel</Link>\n        </div>\n        <div className=\"nav-links\">\n          <Link to=\"/profile\">Profile</Link>\n          <Link to=\"/plotview\">Plan</Link>\n\n          <Link to=\"/trips\">Explore</Link>\n          <Link onClick={logout} to=\"/\">\n            Logout\n          </Link>\n        </div>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"nav-greeting\"></div>\n        <div className=\"logo\">\n          <a href=\"/\">Sykkel</a>\n        </div>\n\n        <div className=\"nav-links\">\n          <Link to=\"/plotview\">Plan</Link>\n          <Link to=\"/trips\">Explore</Link>\n          <Link to=\"/login\">Log in</Link>\n          <Link to=\"/signup\">\n            <button className=\"button-pill\">Sign up</button>\n          </Link>\n        </div>\n      </nav>\n    );\n  }\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/auth/login\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log(response.data);\n        this.props.setUser(response.data);\n        this.props.history.push(\"/plotview\");\n      })\n      .catch(err => {\n        console.log(\"error test\");\n        this.setState({\n          message: err.response.data.message\n        });\n        console.log(\"message\", this.state.message);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-box\">\n          <h2>Log in</h2>\n          <div className=\"auth-form\">\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"email\"></label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"password\"></label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <button className=\"auth-btn\" type=\"submit\">\n                  Log in\n                </button>\n              </div>\n            </form>\n            <p id=\"or-google\">or</p>\n            <div>\n              <a href={`${process.env.REACT_APP_SERVER_URL}/api/auth/google`}>\n                {\" \"}\n                <button className=\"auth-btn sort-button\">\n                  Log in with Google\n                </button>\n              </a>\n            </div>\n            <p id=\"auth-line\">\n              No account yet?{\" \"}\n              <Link className=\"auth-links\" to=\"/signup\">\n                Signup\n              </Link>\n            </p>\n          </div>\n          {this.state.message && <p>{this.state.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class Signup extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    axios\n      .post(\"/api/auth/signup\", {\n        email: this.state.email,\n        password: this.state.password\n      })\n      .then(response => {\n        // redirect\n        // update state for user in <App/>\n        this.props.setUser(response.data);\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(\"error test\", err.response.data.message);\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-box\">\n          <h2>Create an Account</h2>\n\n          <div className=\"auth-form\">\n            <form onSubmit={this.handleSubmit}>\n              <div>\n                <label htmlFor=\"firstName\"></label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"lastName\"></label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                  value={this.state.lastName}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"email\"></label>\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"password\"></label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div>\n                <button className=\"auth-btn\" type=\"submit\">\n                  Sign up\n                </button>\n              </div>\n            </form>\n            <p id=\"or-google\">or</p>\n            <div>\n              <a href={`${process.env.REACT_APP_SERVER_URL}/api/auth/google`}>\n                {\" \"}\n                <button className=\"auth-btn sort-button\">\n                  Sign up with Google\n                </button>\n              </a>\n            </div>\n            <p id=\"auth-line\">\n              Already have an account?{\" \"}\n              <Link className=\"auth-links\" to=\"/login\">\n                Login\n              </Link>\n            </p>\n          </div>\n          {this.state.message && <p>{this.state.message}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class TripCard extends React.Component {\n  state = {\n    userInfo: [],\n    fave: true,\n    somethingDeleted: false\n  };\n\n  // checkFave = () => {\n  //   this.state.userInfo.includes(trip._id) ? true : false;\n  // };\n\n  componentDidMount() {\n    this.getData();\n  }\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log(prevState, this.state);\n  //   console.log(prevProps, this.props);\n  //   if (this.state == prevState) {\n  //     console.log('updated');\n  //     this.getData();\n  //   }\n  // }\n\n  getData = () => {\n    axios.get(\"/api/auth/likedtrips\").then(response => {\n      //  console.log('this is the response.data', response.data);\n      // let faveChecker\n      // this.checkFave();\n      this.setState({\n        userInfo: response.data\n      });\n    });\n  };\n\n  faveTrip = id => {\n    console.log(\"Markus\");\n    axios.post(`/api/trips/updatefaves/${id}`).then(response => {\n      console.log(\"Heldrup\", response.data.liked_trips);\n\n      this.setState(\n        {\n          // posts: response.data,\n          userInfo: response.data.liked_trips\n        },\n        () => {\n          console.log(this.state.userInfo);\n        }\n      );\n    });\n  };\n\n  deleteTrip = id => {\n    console.log(id, \"test id\");\n    axios.post(`/api/trips/delete/${id}`).then(response => {\n      console.log(\"the delete response\", response);\n      this.props.deleteOne(id);\n    });\n  };\n\n  render() {\n    console.log(this.props);\n    console.log(\"is this the liked trip?\", this.state);\n\n    return (\n      <div className=\"trips-list\">\n        {this.props.trips.map(trip => {\n          return (\n            <div className=\"trip-card\">\n              <div className=\"primary-content\">\n                <div>\n                  <h2>\n                    <Link to={`/trip/${trip._id}`}>{trip.title}</Link>\n                  </h2>\n                  <p>From: {trip.origin_name}</p>\n                  <p>To: {trip.destination_name}</p>\n                  {/* <p>Duration: {(this.props.duration / 60).toFixed(2)} hours</p> */}\n                </div>\n                <div className=\"favebutton\">\n                  <div onClick={() => this.faveTrip(trip._id, trip)}>\n                    {this.state.userInfo.includes(trip._id) ? (\n                      <>\n                        <img\n                          className=\"heart\"\n                          src=\"./img/heart.png\"\n                          alt=\"heart\"\n                        />\n                      </>\n                    ) : (\n                      <>\n                        <img\n                          className=\"heart\"\n                          src=\"./img/empty_heart.png\"\n                          alt=\"empty heart\"\n                        />\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"secondary-content\">\n                <div>\n                  <p className=\"caption\">Difficulty</p>\n                  <p className=\"attribute\">\n                    {trip.difficulty ? trip.difficulty : \"N/A\"}\n                  </p>\n                </div>\n\n                <div>\n                  <p className=\"caption\">Distance</p>\n                  <p className=\"attribute\">{trip.distance.toFixed(2)} km</p>\n                </div>\n\n                <div>\n                  <p className=\"caption\">Duration</p>\n                  <p className=\"attribute\">\n                    {(trip.duration / 60).toFixed(2)} hrs\n                  </p>\n                </div>\n\n                <div>\n                  <p className=\"caption\">Elevation gain</p>\n                  <p className=\"attribute\">\n                    <Link to={`chart/${trip._id}`}>\n                      {trip.elevation_gain ? trip.elevation_gain + \" m\" : \"N/A\"}\n                    </Link>\n                  </p>\n                </div>\n\n                <div className=\"delete-attribute\">\n                  <button onClick={() => this.deleteTrip(trip._id)}>\n                    {/* Delete Trip */}\n                    <img src=\"/img/trash_icon.png\" alt=\"delete\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class Search extends React.Component {\n  handleChange = e => {\n    this.props.updateSearchText(e.target.value);\n  };\n\n  submitSearch = e => {\n    this.props.executeSearch();\n  };\n\n  render() {\n    return (\n      <div className=\"search-wrapper\">\n        <input\n          type=\"text\"\n          placeholder=\"Title, origin, or destination\"\n          className=\"search-input\"\n          value={this.props.query}\n          onChange={this.handleChange}\n        />\n        <button className=\"search-button\" onClick={this.submitSearch}>\n          Search\n        </button>\n      </div>\n    );\n  }\n}\n\n// locations (very very vague)\n// duration\n// distance\n// difficulty\n\n// difficulty logic:\n// Easy: < 50km\n// Advance: > 150 km\n// Intermediate: 51 < x < 149\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\n\nexport default class FilterPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"filter-panel\">\n        <div className=\"search-filters\">\n          {/* <p className=\"caption-strong\">Search for a trip</p> */}\n          <Search\n            updateSearchText={this.props.updateSearchText}\n            query={this.props.query}\n            executeSearch={this.props.executeSearch}\n          />\n\n          <p className=\"caption-strong\">Difficulty</p>\n          <label htmlFor=\"Easy\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"Easy\"\n              id=\"Easy\"\n              checked={this.props.easy}\n              onChange={this.props.mutate}\n            />\n            Easy\n          </label>\n\n          <label htmlFor=\"Intermediate\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"Intermediate\"\n              id=\"Intermediate\"\n              checked={this.props.intermediate}\n              onChange={this.props.mutate}\n            />\n            Intermediate\n          </label>\n\n          <label htmlFor=\"Advanced\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"Advanced\"\n              id=\"Advanced\"\n              checked={this.props.advanced}\n              onChange={this.props.mutate}\n            />\n            Advanced\n          </label>\n\n          <br />\n          {/* DURATION */}\n          <p className=\"caption-strong\">Duration</p>\n\n          <label htmlFor=\"oneDay\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"oneDay\"\n              id=\"oneDay\"\n              checked={this.props.oneDay}\n              onChange={this.props.mutate}\n            />\n            1 day ride\n          </label>\n\n          <label htmlFor=\"threeDay\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"threeDay\"\n              id=\"threeDay\"\n              checked={this.props.threeDay}\n              onChange={this.props.mutate}\n            />\n            3 day ride\n          </label>\n\n          <label htmlFor=\"oneWeek\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"oneWeek\"\n              id=\"oneWeek\"\n              checked={this.props.oneWeek}\n              onChange={this.props.mutate}\n            />\n            1 week ride\n          </label>\n\n          <label htmlFor=\"hardcore\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"hardcore\"\n              id=\"hardcore\"\n              checked={this.props.hardcore}\n              onChange={this.props.mutate}\n            />\n            Hardcore\n          </label>\n        </div>\n\n        <div className=\"filter-panel-button\">\n          <button className=\"search-button\" onClick={this.props.executeFilter}>\n            Apply filters\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TripCard from './TripCard';\nimport Search from './Search';\nimport FilterPanel from './FilterPanel';\nimport axios from 'axios';\n\nexport default class Trips extends Component {\n  state = {\n    trips: [],\n    query: '',\n    filteredTrips: [],\n    Easy: false,\n    Intermediate: false,\n    Advanced: false,\n    oneDay: false,\n    threeDay: false,\n    oneWeek: false,\n    hardcore: false,\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    // console.log(\"getData()\");\n    axios.get('/api/trips/addTrip').then(response => {\n      this.setState({\n        trips: response.data,\n        filteredTrips: response.data,\n      });\n    });\n  };\n\n  updateSearchText = text => {\n    console.log('onchange query', text);\n    this.setState({\n      query: text,\n    });\n  };\n\n  executeSearch = () => {\n    let filteredTrips = this.state.trips.filter(obj => {\n      if (\n        obj.title.includes(this.state.query) ||\n        obj.origin_name.includes(this.state.query) ||\n        obj.destination_name.includes(this.state.query)\n      ) {\n        return true;\n      }\n    });\n\n    console.log('filtered', filteredTrips);\n\n    this.setState({\n      filteredTrips: filteredTrips,\n    });\n  };\n\n  mutateCheckboxBoolean = e => {\n    let key = e.target.name;\n    this.setState({ [key]: !this.state[key] }, () => {\n      console.log(key, this.state[key]);\n    });\n  };\n\n  executeFilter = e => {\n    e.preventDefault();\n\n    let filteredTrips = this.state.trips.filter(trip => {\n      return (\n        (this.state.Easy && trip.difficulty === 'Easy') ||\n        (this.state.Intermediate && trip.difficulty === 'Intermediate') ||\n        (this.state.Advanced && trip.difficulty === 'Advanced') ||\n        (this.state.oneDay && trip.duration <= 360) ||\n        (this.state.threeDay && 360 < trip.duration <= 1080) ||\n        (this.state.oneWeek && 1080 < trip.duration <= 2520) ||\n        (this.state.hardcore && trip.duration > 2520)\n      );\n    });\n\n    this.setState({\n      filteredTrips: filteredTrips,\n    });\n\n    // let query = {};\n\n    // Object.keys(this.state).forEach(key => {\n    //   console.log(\"object values\", key);\n    //   if (this.state[key] === true) {\n    //     query[key] = this.state[key];\n    //     // queryKeys.push(key);\n    //   }\n    //   return query;\n    // });\n    // console.log(\"done arr\", query);\n\n    // let filteredResults = this.state.trips.filter(search, query);\n\n    // function search(trip) {\n    //   return Object.keys(this).every(key => trip[key] === this[key]);\n    // }\n\n    // console.log(\"filteredResults\", filteredResults);\n\n    // let filteredList = this.state.trips.filter(trip => {\n    //   for (const key in truthy) {\n    //     if (trip[key] !== truthy[key]) return false;\n    //   }\n    //   return true;\n    // });\n\n    // console.log(\"filtered list:\", filteredList);\n\n    // users= users.filter(function(item) {\n    //   for (var key in filter) {\n    //     if (item[key] === undefined || item[key] != filter[key])\n    //       return false;\n    //   }\n    //   return true;\n    // });\n\n    // const place = features.find(el => el.place_type.includes(\"place\"));\n    // if (place) {\n    //   this.setState({ destination_name: place.place_name });\n    //   return;\n    // }\n\n    // let filteredList = this.state.trips.filter(trip => {\n    //   for (const key of arr) {\n    //     if (trip.key) {\n    //       return true;\n    //     }\n    //   }\n    // });\n    // console.log(filteredList);\n  };\n\n  deleteOne = id => {\n    console.log(id);\n    let filteredArray = this.state.filteredTrips.filter(elem => {\n      console.log(elem);\n      return id !== elem._id;\n    });\n    this.setState({\n      filteredTrips: filteredArray,\n    });\n  };\n\n  render() {\n    // let filterTrips;\n    // this.state.trips.map(trip => {\n    //   //\n    // });\n    console.log(this.state.filteredTrips);\n    return (\n      <div className=\"wrapper\">\n        <div className=\"filter-wrapper\">\n          <FilterPanel\n            updateSearchText={this.updateSearchText}\n            easy={this.state.easy}\n            mutate={this.mutateCheckboxBoolean}\n            query={this.state.query}\n            executeSearch={this.executeSearch}\n            executeFilter={this.executeFilter}\n          />\n        </div>\n        {/* <Search\n          updateSearchText={this.updateSearchText}\n          query={this.state.query}\n          executeSearch={this.executeSearch}\n        /> */}\n        <div className=\"trips-wrapper\">\n          <TripCard deleteOne={this.deleteOne} trips={this.state.filteredTrips} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TripCard from \"./TripCard\";\n\nclass Profile extends React.Component {\n  state = {\n    trips: [],\n    liked_trips: [],\n    button_state_trips: true,\n    button_style_trips: \"sort-button-active\",\n    button_state_favs: false,\n    button_style_favs: \"sort-button\"\n  };\n\n  componentDidMount() {\n    this.getData();\n    // this.tripsFilter();\n  }\n\n  getData = () => {\n    // console.log(\"getData()\");\n    axios.get(\"/api/trips/user\").then(response => {\n      if (this.state.button_state_trips) {\n        this.setState({\n          trips: response.data,\n          button_style_trips: \"sort-button-active\",\n          button_style_favs: \"sort-button\"\n        });\n      }\n    });\n  };\n\n  showFavorites = () => {\n    axios.get(`/api/trips/trips/likedtrips`).then(response => {\n      if (!this.state.button_state_favs) {\n        this.setState({\n          trips: response.data,\n          button_style_favs: \"sort-button-active\",\n          button_style_trips: \"sort-button\"\n        });\n      }\n\n      console.log(\"Marcel is testing this shiz\", this.state.liked_trips);\n    });\n  };\n\n  deleteOne = id => {\n    console.log(id);\n    let filteredArray = this.state.trips.filter(elem => {\n      console.log(elem);\n      return id !== elem._id;\n    });\n    this.setState({\n      trips: filteredArray\n    });\n  };\n\n  render() {\n    console.log(\"the arry\", this.state.trips);\n    return (\n      <div className=\"wrapper\">\n        <div className=\"profile-wrapper\">\n          <div className=\"info-wrapper\">\n            {/* <div>\n              <img className=\"profile-img\" src={this.props.user.profilePic} alt=\"Profile Image\" />\n            </div> */}\n\n            <div className=\"profile-img-wrapper\">\n              {this.props.user.profilePic ? (\n                <img\n                  className=\"profile-img\"\n                  src={this.props.user.profilePic}\n                  alt=\"Profile Image\"\n                />\n              ) : (\n                <img\n                  className=\"profile-img\"\n                  src=\"./img/user_avatar.png\"\n                  alt=\"Profile Image\"\n                />\n              )}\n            </div>\n\n            <h2>\n              {this.props.user.firstName} {this.props.user.lastName}\n            </h2>\n            <p>{this.props.user.email}</p>\n          </div>\n        </div>\n        <div className=\"trips-wrapper\">\n          <div className=\"sort-button-wrapper\">\n            <button\n              className={this.state.button_style_trips}\n              onClick={this.getData}\n            >\n              My Trips\n            </button>\n            {\n              <button\n                className={this.state.button_style_favs}\n                onClick={this.showFavorites}\n              >\n                {/* {this.state.trips.includes(trip._id)} */}\n                My Favorites\n              </button>\n            }\n          </div>\n          <TripCard deleteOne={this.deleteOne} trips={this.state.trips} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n\n{\n  /* <button onClick={() => this.faveTrip(trip._id, trip)}>\n{this.state.userInfo.includes(trip._id)\n  ? \"Unfave\"\n  : \"fave\"}\n</button> */\n}\n","import React from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapBoxGLDraw from \"mapbox-gl-draw\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport TripReview from \"./TripReview\";\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiamFjcXVlbGluZWNoZW4iLCJhIjoiY2s2ZHB5Y2RxMDkxbzNkbXA2bXVzM3JvbiJ9.pUyDxtMWjGqmGgX4JAdL7g\";\n\nexport default class PlotView extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  state = {\n    title: \"\",\n    origin: [],\n    origin_name: \"\",\n    destination: [],\n    destination_name: \"\",\n    map: null,\n    draw: null,\n    lng: 5,\n    lat: 34,\n    zoom: 4,\n    uuid: \"\",\n    duration: \"\",\n    distance: \"\",\n    coordinates: [],\n    waypoints: [],\n    reviewTrip: false\n  };\n  //\n  removeRoute = () => {\n    if (this.state.map.getSource(\"route\")) {\n      this.state.map.removeLayer(\"route\");\n      this.state.map.removeSource(\"route\");\n      //  document.getElementById('calculated-line').innerHTML = '';\n    } else {\n      return;\n    }\n  };\n\n  updateRoute = () => {\n    this.removeRoute(); // overwrite any existing layers\n    let data = this.state.draw.getAll();\n    let answer = document.getElementById(\"calculated-line\");\n    let lastFeature = data.features.length - 1;\n    let coords = data.features[lastFeature].geometry.coordinates;\n    let newCoords = coords.join(\";\");\n    this.getMatch(newCoords);\n  };\n  // let primes = arr1.concat(arr2);\n\n  getMatch = e => {\n    let url =\n      \"https://api.mapbox.com/directions/v5/mapbox/cycling/\" +\n      e +\n      \"?geometries=geojson&steps=true&&access_token=\" +\n      mapboxgl.accessToken;\n\n    let req = new XMLHttpRequest();\n    console.log(\"req\", req);\n    req.responseType = \"json\";\n    req.open(\"GET\", url, true);\n    req.onload = () => {\n      let jsonResponse = req.response;\n      let userCoords = this.props.coordinates.map(element => {\n        return element;\n      });\n      let arr = jsonResponse.routes[0].geometry.coordinates;\n      let combinedCoords = userCoords.concat(arr);\n      console.log(\"jsonReponse\", jsonResponse);\n      console.log(\"CombinedCoords\", combinedCoords);\n      this.setState(\n        {\n          distance: jsonResponse.routes[0].distance * 0.001,\n          duration: jsonResponse.routes[0].duration / 60,\n          coordinates: combinedCoords,\n          uuid: jsonResponse.uuid,\n          waypoints: jsonResponse.waypoints,\n          origin: jsonResponse.routes[0].geometry.coordinates[0],\n          destination:\n            jsonResponse.routes[0].geometry.coordinates[arr.length - 1]\n        },\n        () => {\n          console.log(this.state);\n          console.log(\"combinedCoords = \", combinedCoords);\n          this.reverseGeocode();\n        }\n      );\n      // let distance = jsonResponse.routes[0].distance * 0.001;\n      // let duration = jsonResponse.routes[0].duration / 60;\n      console.log(jsonResponse);\n      console.log(\"TESTING THE STATE AGAIN\", this.state);\n\n      // document.getElementById('calculated-line').innerHTML =\n      // 'Distance: ' + distance.toF + ' km<br>Duration: ' + duration.toF + ' minutes';\n      let coords = jsonResponse.routes[0].geometry;\n      // add the route to the map\n      this.addRoute(coords);\n      this.getInstructions(jsonResponse.routes[0]);\n    };\n    req.send();\n  };\n\n  addRoute = coords => {\n    // check if the route is already loaded\n    if (this.state.map.getSource(\"route\")) {\n      this.state.map.removeLayer(\"route\");\n      this.state.map.removeSource(\"route\");\n    } else {\n      this.state.map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            properties: {},\n            geometry: coords\n          }\n        },\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#3b9ddd\",\n          \"line-width\": 8,\n          \"line-opacity\": 0.8\n        }\n      });\n    }\n  };\n\n  getInstructions = data => {\n    // Target the sidebar to add the instructions\n    let directions = document.getElementById(\"directions\");\n    let legs = data.legs;\n    let tripDirections = [];\n    // Output the instructions for each step of each leg in the response object\n    for (let i = 0; i < legs.length; i++) {\n      let steps = legs[i].steps;\n      for (let j = 0; j < steps.length; j++) {\n        tripDirections.push(\n          \"<br><li>\" + steps[j].maneuver.instruction + \"</li>\"\n        );\n      }\n    }\n    // directions.innerHTML = '<br><h2>Trip duration: ' + Math.floor(data.duration / 60) + ' min.</h2>' + tripDirections;\n  };\n\n  componentDidMount = () => {\n    let userCoords = this.props.coordinates.map(element => {\n      element.reverse();\n      return element;\n    });\n\n    console.log(\"initial declaration\", userCoords);\n    console.log(\"testing origin\", this.props.origin[0]);\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [this.props.origin[0], this.props.origin[1]],\n      zoom: this.state.zoom,\n      duration: this.state.duration,\n      distance: this.state.distance\n    });\n    // console.log('duration', duration);\n    const draw = new MapBoxGLDraw({\n      displayControlsDefault: false,\n      controls: {\n        line_string: true,\n        trash: true\n      },\n      styles: [\n        // ACTIVE (being drawn)\n        // line stroke\n        {\n          id: \"gl-draw-line\",\n          type: \"line\",\n          filter: [\n            \"all\",\n            [\"==\", \"$type\", \"LineString\"],\n            [\"!=\", \"mode\", \"static\"]\n          ],\n          layout: {\n            \"line-cap\": \"round\",\n            \"line-join\": \"round\"\n          },\n          paint: {\n            \"line-color\": \"#3b9ddd\",\n            \"line-dasharray\": [0.2, 2],\n            \"line-width\": 4,\n            \"line-opacity\": 0.7\n          }\n        },\n        // vertex point halos\n        {\n          id: \"gl-draw-polygon-and-line-vertex-halo-active\",\n          type: \"circle\",\n          filter: [\n            \"all\",\n            [\"==\", \"meta\", \"vertex\"],\n            [\"==\", \"$type\", \"Point\"],\n            [\"!=\", \"mode\", \"static\"]\n          ],\n          paint: {\n            \"circle-radius\": 10,\n            \"circle-color\": \"#FFF\"\n          }\n        },\n        // vertex points\n        {\n          id: \"gl-draw-polygon-and-line-vertex-active\",\n          type: \"circle\",\n          filter: [\n            \"all\",\n            [\"==\", \"meta\", \"vertex\"],\n            [\"==\", \"$type\", \"Point\"],\n            [\"!=\", \"mode\", \"static\"]\n          ],\n          paint: {\n            \"circle-radius\": 6,\n            \"circle-color\": \"#3b9ddd\"\n          }\n        }\n      ]\n    });\n\n    map.on(\"load\", () => {\n      // console.log(\"On Load coords\", userCoords);\n      console.log(\"props\", this.props);\n      let userCoords = this.props.coordinates.map(element => {\n        return element.reverse();\n      });\n      console.log(\"hacked userCoords\", userCoords);\n      map.addLayer({\n        id: \"layer1\",\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            geometry: {\n              type: \"LineString\",\n              coordinates: userCoords\n            }\n          }\n        },\n        layout: {\n          \"line-join\": \"round\",\n\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#ff6962\",\n          \"line-width\": 8,\n          \"line-opacity\": 0.8\n        }\n      });\n\n      // map.addSource(\"route\", {\n      //   type: \"geojson\",\n      //   data: {\n      //     type: \"Feature\",\n      //     properties: {},\n      //     geometry: {\n      //       type: \"LineString\",\n      //       coordinates: [userCoords]\n      //     }\n      //   }\n      // });\n      // map.addLayer({\n      //   id: \"route\",\n      //   type: \"line\",\n      //   source: \"route\",\n      //   layout: {\n      //     \"line-join\": \"round\",\n      //     \"line-cap\": \"round\"\n      //   },\n      //   paint: {\n      //     \"line-color\": \"#888\",\n      //     \"line-width\": 8\n      //   }\n      // });\n    });\n\n    this.setState({ map, draw }, () => {\n      const { map, draw } = this.state;\n\n      // add the draw tool to the map\n      map.addControl(draw);\n\n      // add create, update, or delete actions\n      map.on(\"draw.create\", this.updateRoute);\n      map.on(\"draw.update\", this.updateRoute);\n      map.on(\"draw.delete\", this.removeRoute);\n\n      // Storing new coordinate (whatever the user interacts with)\n      map.on(\"move\", () => {\n        this.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toF\n        });\n      });\n    });\n  };\n\n  reverseGeocode = () => {\n    // Reverse geocoding for Origin\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.origin[0]},${this.state.origin[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        console.log(\"full\", response);\n\n        let features = response.data.features;\n        console.log(features);\n\n        const locality = features.find(el =>\n          el.place_type.includes(\"locality\")\n        );\n        if (locality) {\n          this.setState({ origin_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes(\"place\"));\n        if (place) {\n          this.setState({ origin_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes(\"region\"));\n        if (region) {\n          this.setState({ origin_name: region.place_name });\n          return;\n        }\n      });\n\n    // Reverse geocoding with Destination\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.destination[0]},${this.state.destination[1]}.json?access_token=${mapboxgl.accessToken}`\n      )\n      .then(response => {\n        console.log(\"full\", response);\n\n        let features = response.data.features;\n        console.log(features);\n\n        const locality = features.find(el =>\n          el.place_type.includes(\"locality\")\n        );\n        if (locality) {\n          this.setState({ destination_name: locality.place_name });\n          return;\n        }\n\n        const place = features.find(el => el.place_type.includes(\"place\"));\n        if (place) {\n          this.setState({ destination_name: place.place_name });\n          return;\n        }\n\n        const region = features.find(el => el.place_type.includes(\"region\"));\n        if (region) {\n          this.setState({ destination_name: region.place_name });\n          return;\n        }\n      });\n  };\n\n  goToReviewTrip = () => {\n    this.setState({\n      reviewTrip: !this.state.reviewTrip\n    });\n  };\n\n  updateTitle = text => {\n    this.setState({\n      title: text\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    let tripReviewCard;\n    let text;\n    if (this.state.reviewTrip) {\n      text = \"Go Back\";\n      tripReviewCard = (\n        <div className=\"sidebarReview\">\n          <TripReview tripData={this.state} updateTitle={this.updateTitle} />\n        </div>\n      );\n    } else {\n      text = \"Review Trip\";\n    }\n    return (\n      <div>\n        {this.state.distance && (\n          <div className=\"sidebar\">\n            {tripReviewCard}\n            <button className=\"button-ghost\" onClick={this.goToReviewTrip}>\n              {text}\n            </button>{\" \"}\n          </div>\n        )}\n        {!this.state.distance && (\n          <div className=\"popUp\">\n            <p className=\"caption-strong\">\n              Plot out your trip and press enter{\" \"}\n            </p>\n          </div>\n        )}\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport MapView from \"./MapViewDetail\";\n\nexport default class TripDetail extends Component {\n  state = {\n    trip: null\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    console.log(\"ide value\", id);\n\n    axios.get(`/api/trips/trip/${id}`).then(response => {\n      console.log(\"response\", response);\n      this.setState({\n        trip: response.data\n      });\n      console.log(\"Test the state:\", this.state);\n    });\n  }\n\n  render() {\n    {\n      const trip = this.state.trip;\n\n      if (!trip) {\n        return <div>Jackie and the Ferry Boys</div>;\n      }\n      return (\n        <>\n          {/* <h1>{trip.title}</h1>\n          <p>{trip.duration}</p>\n          <p>{trip.distance}</p> */}\n          <MapView coordinates={trip.coordinates} origin={trip.origin} />\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"home-container\">\n        <div className=\"home-left\">\n          <div className=\"main\">\n            <h1>Cycling.</h1>\n            <h1>Really far.</h1>\n            <p className=\"intro-description\">\n              Introducing Sykkel. A social platform for cyclists to discover and\n              plan long-distance cycling trips in and around Europe.\n            </p>\n            <div className=\"home-btns-wrapper\">\n              <Link to=\"/trips\">\n                <button className=\"button-solid-dark\">Explore routes</button>\n              </Link>\n              <Link to=\"/plotview\">\n                <button className=\"button-solid\">Plan your own</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"home-right\">\n          <img src=\"/img/home-teaser.png\" alt=\"home-teaser\" />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Chart from \"chart.js\";\nimport axios from \"axios\";\n\nexport default class ElevationChart extends Component {\n  chartRef = React.createRef();\n\n  state = {\n    elevations: [],\n    Origin: [],\n    Destination: []\n  };\n\n  createChart = () => {\n    console.log(\"this is the state in the function call\", this.state);\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n    let xAxis = [];\n\n    for (let i = 0; i < this.state.elevations.length; i += 1) {\n      xAxis.push(\" \");\n    }\n\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: xAxis,\n        datasets: [\n          {\n            label: \"elevation / m\",\n            data: this.state.elevations,\n            fill: true,\n            backgroundColor: \"rgba(255, 105, 98, 0.2)\",\n            borderColor: \"#ff6962\",\n            borderWidth: 2\n            // pointBorderColor: \"rgba(255,255,255,0.0)\"\n          }\n        ]\n      },\n      options: {\n        bezierCurve: true,\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\"\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\"\n              }\n            }\n          ]\n        }\n      }\n    });\n  };\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    return axios.get(`/api/trips/trip/${id}`).then(trip => {\n      console.log(\"trip?!\", trip.data.elevations);\n      this.setState({\n        elevations: trip.data.elevations,\n        Origin: trip.data.origin,\n        Destination: trip.data.destination\n      });\n    });\n    console.log(\"the getData fn ran\");\n  };\n\n  componentDidMount() {\n    this.getData().then(res => {\n      this.createChart();\n    });\n    console.log(\"this is the id\", this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <div className=\"chart\">\n        <canvas id=\"myChart\" ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport PlotView from \"./components/PlotView\";\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport TripReview from \"./components/TripReview\";\nimport Trips from \"./components/Trips\";\nimport Profile from \"./components/Profile\";\nimport TripDetail from \"./components/TripDetail\";\nimport Home from \"./components/Home\";\nimport ElevationChart from \"./components/ElevationChart\";\n// import Test from './components/Test';\n\n// testing out context:\n// create new context\n// const MyContext = React.createContext();\n\n// // create provider component\n// class MyProvider extends React.Component {\n//   state = {\n//     user: this.props.user\n//   };\n\n//   render() {\n//     return (\n//       <MyContext.Provider value={{ state: this.state }}>\n//         {this.props.children}\n//       </MyContext.Provider>\n//     );\n//   }\n// }\n\n// Context test until here ----------------------------\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = userObj => {\n    this.setState({\n      user: userObj\n    });\n  };\n\n  render() {\n    // const id = this.props.match.params.tripId;\n    return (\n      // <MyProvider>\n      <div className=\"App\">\n        <NavBar setUser={this.setUser} user={this.state.user} />\n        <div className=\"content\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/plotview\" component={PlotView} />\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login history={props.history} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path=\"/signup\"\n            render={props => (\n              <Signup history={props.history} setUser={this.setUser} />\n            )}\n          />\n          <Route exact path=\"/trips\" component={Trips} />\n          <Route path=\"/chart/:id\" component={ElevationChart} />\n          <Route path=\"/trip/:id\" component={TripDetail} />\n          <Route\n            path=\"/profile\"\n            render={props => (\n              <Profile setUser={this.setUser} user={this.state.user} />\n            )}\n          />\n        </div>\n      </div>\n      // </MyProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}