{"ast":null,"code":"module.exports = flatten;\n\nfunction flatten(gj, up) {\n  switch (gj && gj.type || null) {\n    case 'FeatureCollection':\n      gj.features = gj.features.reduce(function (mem, feature) {\n        return mem.concat(flatten(feature));\n      }, []);\n      return gj;\n\n    case 'Feature':\n      return flatten(gj.geometry).map(function (geom) {\n        return {\n          type: 'Feature',\n          properties: JSON.parse(JSON.stringify(gj.properties)),\n          geometry: geom\n        };\n      });\n\n    case 'MultiPoint':\n      return gj.coordinates.map(function (_) {\n        return {\n          type: 'Point',\n          coordinates: _\n        };\n      });\n\n    case 'MultiPolygon':\n      return gj.coordinates.map(function (_) {\n        return {\n          type: 'Polygon',\n          coordinates: _\n        };\n      });\n\n    case 'MultiLineString':\n      return gj.coordinates.map(function (_) {\n        return {\n          type: 'LineString',\n          coordinates: _\n        };\n      });\n\n    case 'GeometryCollection':\n      return gj.geometries;\n\n    case 'Point':\n    case 'Polygon':\n    case 'LineString':\n      return [gj];\n\n    default:\n      return gj;\n  }\n}","map":{"version":3,"sources":["/Users/jacquelinechen/Desktop/Mapbox/mapbox-react-tutorial/mapboxAndReact/node_modules/geojson-flatten/index.js"],"names":["module","exports","flatten","gj","up","type","features","reduce","mem","feature","concat","geometry","map","geom","properties","JSON","parse","stringify","coordinates","_","geometries"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAEA,SAASA,OAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAyB;AACrB,UAASD,EAAE,IAAIA,EAAE,CAACE,IAAV,IAAmB,IAA3B;AACI,SAAK,mBAAL;AACIF,MAAAA,EAAE,CAACG,QAAH,GAAcH,EAAE,CAACG,QAAH,CAAYC,MAAZ,CAAmB,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACpD,eAAOD,GAAG,CAACE,MAAJ,CAAWR,OAAO,CAACO,OAAD,CAAlB,CAAP;AACH,OAFa,EAEX,EAFW,CAAd;AAGA,aAAON,EAAP;;AACJ,SAAK,SAAL;AACI,aAAOD,OAAO,CAACC,EAAE,CAACQ,QAAJ,CAAP,CAAqBC,GAArB,CAAyB,UAASC,IAAT,EAAe;AAC3C,eAAO;AACHR,UAAAA,IAAI,EAAE,SADH;AAEHS,UAAAA,UAAU,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,EAAE,CAACW,UAAlB,CAAX,CAFT;AAGHH,UAAAA,QAAQ,EAAEE;AAHP,SAAP;AAKH,OANM,CAAP;;AAOJ,SAAK,YAAL;AACI,aAAOV,EAAE,CAACe,WAAH,CAAeN,GAAf,CAAmB,UAASO,CAAT,EAAY;AAClC,eAAO;AAAEd,UAAAA,IAAI,EAAE,OAAR;AAAiBa,UAAAA,WAAW,EAAEC;AAA9B,SAAP;AACH,OAFM,CAAP;;AAGJ,SAAK,cAAL;AACI,aAAOhB,EAAE,CAACe,WAAH,CAAeN,GAAf,CAAmB,UAASO,CAAT,EAAY;AAClC,eAAO;AAAEd,UAAAA,IAAI,EAAE,SAAR;AAAmBa,UAAAA,WAAW,EAAEC;AAAhC,SAAP;AACH,OAFM,CAAP;;AAGJ,SAAK,iBAAL;AACI,aAAOhB,EAAE,CAACe,WAAH,CAAeN,GAAf,CAAmB,UAASO,CAAT,EAAY;AAClC,eAAO;AAAEd,UAAAA,IAAI,EAAE,YAAR;AAAsBa,UAAAA,WAAW,EAAEC;AAAnC,SAAP;AACH,OAFM,CAAP;;AAGJ,SAAK,oBAAL;AACI,aAAOhB,EAAE,CAACiB,UAAV;;AACJ,SAAK,OAAL;AACA,SAAK,SAAL;AACA,SAAK,YAAL;AACI,aAAO,CAACjB,EAAD,CAAP;;AACJ;AACI,aAAOA,EAAP;AAjCR;AAmCH","sourcesContent":["module.exports = flatten;\n\nfunction flatten(gj, up) {\n    switch ((gj && gj.type) || null) {\n        case 'FeatureCollection':\n            gj.features = gj.features.reduce(function(mem, feature) {\n                return mem.concat(flatten(feature));\n            }, []);\n            return gj;\n        case 'Feature':\n            return flatten(gj.geometry).map(function(geom) {\n                return {\n                    type: 'Feature',\n                    properties: JSON.parse(JSON.stringify(gj.properties)),\n                    geometry: geom\n                };\n            });\n        case 'MultiPoint':\n            return gj.coordinates.map(function(_) {\n                return { type: 'Point', coordinates: _ };\n            });\n        case 'MultiPolygon':\n            return gj.coordinates.map(function(_) {\n                return { type: 'Polygon', coordinates: _ };\n            });\n        case 'MultiLineString':\n            return gj.coordinates.map(function(_) {\n                return { type: 'LineString', coordinates: _ };\n            });\n        case 'GeometryCollection':\n            return gj.geometries;\n        case 'Point':\n        case 'Polygon':\n        case 'LineString':\n            return [gj];\n        default:\n            return gj;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}