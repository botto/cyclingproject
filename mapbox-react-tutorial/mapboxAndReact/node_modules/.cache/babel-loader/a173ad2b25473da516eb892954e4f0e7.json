{"ast":null,"code":"const CommonSelectors = require('../lib/common_selectors');\n\nconst mouseEventPoint = require('../lib/mouse_event_point');\n\nconst featuresAt = require('../lib/features_at');\n\nconst createSupplementaryPoints = require('../lib/create_supplementary_points');\n\nconst StringSet = require('../lib/string_set');\n\nconst doubleClickZoom = require('../lib/double_click_zoom');\n\nconst moveFeatures = require('../lib/move_features');\n\nconst Constants = require('../constants');\n\nconst MultiFeature = require('../feature_types/multi_feature');\n\nmodule.exports = function (ctx, options = {}) {\n  let dragMoveLocation = null;\n  let boxSelectStartLocation = null;\n  let boxSelectElement;\n  let boxSelecting = false;\n  let canBoxSelect = false;\n  let dragMoving = false;\n  let canDragMove = false;\n  const initiallySelectedFeatureIds = options.featureIds || [];\n\n  const fireUpdate = function () {\n    ctx.map.fire(Constants.events.UPDATE, {\n      action: Constants.updateActions.MOVE,\n      features: ctx.store.getSelected().map(f => f.toGeoJSON())\n    });\n  };\n\n  const fireActionable = () => {\n    const selectedFeatures = ctx.store.getSelected();\n    const multiFeatures = selectedFeatures.filter(feature => feature instanceof MultiFeature);\n    let combineFeatures = false;\n\n    if (selectedFeatures.length > 1) {\n      combineFeatures = true;\n      const featureType = selectedFeatures[0].type.replace('Multi', '');\n      selectedFeatures.forEach(feature => {\n        if (feature.type.replace('Multi', '') !== featureType) {\n          combineFeatures = false;\n        }\n      });\n    }\n\n    const uncombineFeatures = multiFeatures.length > 0;\n    const trash = selectedFeatures.length > 0;\n    ctx.events.actionable({\n      combineFeatures,\n      uncombineFeatures,\n      trash\n    });\n  };\n\n  const getUniqueIds = function (allFeatures) {\n    if (!allFeatures.length) return [];\n    const ids = allFeatures.map(s => s.properties.id).filter(id => id !== undefined).reduce((memo, id) => {\n      memo.add(id);\n      return memo;\n    }, new StringSet());\n    return ids.values();\n  };\n\n  const stopExtendedInteractions = function () {\n    if (boxSelectElement) {\n      if (boxSelectElement.parentNode) boxSelectElement.parentNode.removeChild(boxSelectElement);\n      boxSelectElement = null;\n    }\n\n    ctx.map.dragPan.enable();\n    boxSelecting = false;\n    canBoxSelect = false;\n    dragMoving = false;\n    canDragMove = false;\n  };\n\n  return {\n    stop: function () {\n      doubleClickZoom.enable(ctx);\n    },\n    start: function () {\n      // Select features that should start selected,\n      // probably passed in from a `draw_*` mode\n      if (ctx.store) {\n        ctx.store.setSelected(initiallySelectedFeatureIds.filter(id => {\n          return ctx.store.get(id) !== undefined;\n        }));\n        fireActionable();\n      } // Any mouseup should stop box selecting and dragMoving\n\n\n      this.on('mouseup', CommonSelectors.true, stopExtendedInteractions); // On mousemove that is not a drag, stop extended interactions.\n      // This is useful if you drag off the canvas, release the button,\n      // then move the mouse back over the canvas --- we don't allow the\n      // interaction to continue then, but we do let it continue if you held\n      // the mouse button that whole time\n\n      this.on('mousemove', CommonSelectors.true, stopExtendedInteractions); // As soon as you mouse leaves the canvas, update the feature\n\n      this.on('mouseout', () => dragMoving, fireUpdate); // Click (with or without shift) on no feature\n\n      this.on('click', CommonSelectors.noTarget, function () {\n        // Clear the re-render selection\n        const wasSelected = ctx.store.getSelectedIds();\n\n        if (wasSelected.length) {\n          ctx.store.clearSelected();\n          wasSelected.forEach(id => this.render(id));\n        }\n\n        doubleClickZoom.enable(ctx);\n        stopExtendedInteractions();\n      }); // Click (with or without shift) on a vertex\n\n      this.on('click', CommonSelectors.isOfMetaType(Constants.meta.VERTEX), e => {\n        // Enter direct select mode\n        ctx.events.changeMode(Constants.modes.DIRECT_SELECT, {\n          featureId: e.featureTarget.properties.parent,\n          coordPath: e.featureTarget.properties.coord_path,\n          startPos: e.lngLat\n        });\n        ctx.ui.queueMapClasses({\n          mouse: Constants.cursors.MOVE\n        });\n      }); // Mousedown on a selected feature\n\n      this.on('mousedown', CommonSelectors.isActiveFeature, function (e) {\n        // Stop any already-underway extended interactions\n        stopExtendedInteractions(); // Disable map.dragPan immediately so it can't start\n\n        ctx.map.dragPan.disable(); // Re-render it and enable drag move\n\n        this.render(e.featureTarget.properties.id); // Set up the state for drag moving\n\n        canDragMove = true;\n        dragMoveLocation = e.lngLat;\n      }); // Click (with or without shift) on any feature\n\n      this.on('click', CommonSelectors.isFeature, function (e) {\n        // Stop everything\n        doubleClickZoom.disable(ctx);\n        stopExtendedInteractions();\n        const isShiftClick = CommonSelectors.isShiftDown(e);\n        const selectedFeatureIds = ctx.store.getSelectedIds();\n        const featureId = e.featureTarget.properties.id;\n        const isFeatureSelected = ctx.store.isSelected(featureId); // Click (without shift) on any selected feature but a point\n\n        if (!isShiftClick && isFeatureSelected && ctx.store.get(featureId).type !== Constants.geojsonTypes.POINT) {\n          // Enter direct select mode\n          return ctx.events.changeMode(Constants.modes.DIRECT_SELECT, {\n            featureId: featureId\n          });\n        } // Shift-click on a selected feature\n\n\n        if (isFeatureSelected && isShiftClick) {\n          // Deselect it\n          ctx.store.deselect(featureId);\n          ctx.ui.queueMapClasses({\n            mouse: Constants.cursors.POINTER\n          });\n\n          if (selectedFeatureIds.length === 1) {\n            doubleClickZoom.enable(ctx);\n          } // Shift-click on an unselected feature\n\n        } else if (!isFeatureSelected && isShiftClick) {\n          // Add it to the selection\n          ctx.store.select(featureId);\n          ctx.ui.queueMapClasses({\n            mouse: Constants.cursors.MOVE\n          }); // Click (without shift) on an unselected feature\n        } else if (!isFeatureSelected && !isShiftClick) {\n          // Make it the only selected feature\n          selectedFeatureIds.forEach(this.render);\n          ctx.store.setSelected(featureId);\n          ctx.ui.queueMapClasses({\n            mouse: Constants.cursors.MOVE\n          });\n        } // No matter what, re-render the clicked feature\n\n\n        this.render(featureId);\n      }); // Dragging when drag move is enabled\n\n      this.on('drag', () => canDragMove, e => {\n        dragMoving = true;\n        e.originalEvent.stopPropagation();\n        const delta = {\n          lng: e.lngLat.lng - dragMoveLocation.lng,\n          lat: e.lngLat.lat - dragMoveLocation.lat\n        };\n        moveFeatures(ctx.store.getSelected(), delta);\n        dragMoveLocation = e.lngLat;\n      }); // Mouseup, always\n\n      this.on('mouseup', CommonSelectors.true, function (e) {\n        // End any extended interactions\n        if (dragMoving) {\n          fireUpdate();\n        } else if (boxSelecting) {\n          const bbox = [boxSelectStartLocation, mouseEventPoint(e.originalEvent, ctx.container)];\n          const featuresInBox = featuresAt(null, bbox, ctx);\n          const idsToSelect = getUniqueIds(featuresInBox).filter(id => !ctx.store.isSelected(id));\n\n          if (idsToSelect.length) {\n            ctx.store.select(idsToSelect);\n            idsToSelect.forEach(this.render);\n            ctx.ui.queueMapClasses({\n              mouse: Constants.cursors.MOVE\n            });\n          }\n        }\n\n        stopExtendedInteractions();\n      });\n\n      if (ctx.options.boxSelect) {\n        // Shift-mousedown anywhere\n        this.on('mousedown', CommonSelectors.isShiftMousedown, e => {\n          stopExtendedInteractions();\n          ctx.map.dragPan.disable(); // Enable box select\n\n          boxSelectStartLocation = mouseEventPoint(e.originalEvent, ctx.container);\n          canBoxSelect = true;\n        }); // Drag when box select is enabled\n\n        this.on('drag', () => canBoxSelect, e => {\n          boxSelecting = true;\n          ctx.ui.queueMapClasses({\n            mouse: Constants.cursors.ADD\n          }); // Create the box node if it doesn't exist\n\n          if (!boxSelectElement) {\n            boxSelectElement = document.createElement('div');\n            boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n            ctx.container.appendChild(boxSelectElement);\n          } // Adjust the box node's width and xy position\n\n\n          const current = mouseEventPoint(e.originalEvent, ctx.container);\n          const minX = Math.min(boxSelectStartLocation.x, current.x);\n          const maxX = Math.max(boxSelectStartLocation.x, current.x);\n          const minY = Math.min(boxSelectStartLocation.y, current.y);\n          const maxY = Math.max(boxSelectStartLocation.y, current.y);\n          const translateValue = `translate(${minX}px, ${minY}px)`;\n          boxSelectElement.style.transform = translateValue;\n          boxSelectElement.style.WebkitTransform = translateValue;\n          boxSelectElement.style.width = `${maxX - minX}px`;\n          boxSelectElement.style.height = `${maxY - minY}px`;\n        });\n      }\n    },\n    render: function (geojson, push) {\n      geojson.properties.active = ctx.store.isSelected(geojson.properties.id) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n      push(geojson);\n      fireActionable();\n      if (geojson.properties.active !== Constants.activeStates.ACTIVE || geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n      createSupplementaryPoints(geojson).forEach(push);\n    },\n    trash: function () {\n      ctx.store.delete(ctx.store.getSelectedIds());\n      fireActionable();\n    },\n    combineFeatures: function () {\n      const selectedFeatures = ctx.store.getSelected();\n      if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n      const coordinates = [],\n            featuresCombined = [];\n      const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n      for (let i = 0; i < selectedFeatures.length; i++) {\n        const feature = selectedFeatures[i];\n\n        if (feature.type.replace('Multi', '') !== featureType) {\n          return;\n        }\n\n        if (feature.type.includes('Multi')) {\n          feature.getCoordinates().forEach(subcoords => {\n            coordinates.push(subcoords);\n          });\n        } else {\n          coordinates.push(feature.getCoordinates());\n        }\n\n        featuresCombined.push(feature.toGeoJSON());\n      }\n\n      if (featuresCombined.length > 1) {\n        const multiFeature = new MultiFeature(ctx, {\n          type: Constants.geojsonTypes.FEATURE,\n          properties: featuresCombined[0].properties,\n          geometry: {\n            type: `Multi${featureType}`,\n            coordinates: coordinates\n          }\n        });\n        ctx.store.add(multiFeature);\n        ctx.store.delete(ctx.store.getSelectedIds(), {\n          silent: true\n        });\n        ctx.store.setSelected([multiFeature.id]);\n        ctx.map.fire(Constants.events.COMBINE_FEATURES, {\n          createdFeatures: [multiFeature.toGeoJSON()],\n          deletedFeatures: featuresCombined\n        });\n      }\n\n      fireActionable();\n    },\n    uncombineFeatures: function () {\n      const selectedFeatures = ctx.store.getSelected();\n      if (selectedFeatures.length === 0) return;\n      const createdFeatures = [];\n      const featuresUncombined = [];\n\n      for (let i = 0; i < selectedFeatures.length; i++) {\n        const feature = selectedFeatures[i];\n\n        if (feature instanceof MultiFeature) {\n          feature.getFeatures().forEach(subFeature => {\n            ctx.store.add(subFeature);\n            subFeature.properties = feature.properties;\n            createdFeatures.push(subFeature.toGeoJSON());\n            ctx.store.select([subFeature.id]);\n          });\n          ctx.store.delete(feature.id, {\n            silent: true\n          });\n          featuresUncombined.push(feature.toGeoJSON());\n        }\n      }\n\n      if (createdFeatures.length > 1) {\n        ctx.map.fire(Constants.events.UNCOMBINE_FEATURES, {\n          createdFeatures: createdFeatures,\n          deletedFeatures: featuresUncombined\n        });\n      }\n\n      fireActionable();\n    }\n  };\n};","map":{"version":3,"sources":["/home/jfrank/Ironhack/LastProject/cyclingproject/mapbox-react-tutorial/mapboxAndReact/node_modules/mapbox-gl-draw/src/modes/simple_select.js"],"names":["CommonSelectors","require","mouseEventPoint","featuresAt","createSupplementaryPoints","StringSet","doubleClickZoom","moveFeatures","Constants","MultiFeature","module","exports","ctx","options","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initiallySelectedFeatureIds","featureIds","fireUpdate","map","fire","events","UPDATE","action","updateActions","MOVE","features","store","getSelected","f","toGeoJSON","fireActionable","selectedFeatures","multiFeatures","filter","feature","combineFeatures","length","featureType","type","replace","forEach","uncombineFeatures","trash","actionable","getUniqueIds","allFeatures","ids","s","properties","id","undefined","reduce","memo","add","values","stopExtendedInteractions","parentNode","removeChild","dragPan","enable","stop","start","setSelected","get","on","true","noTarget","wasSelected","getSelectedIds","clearSelected","render","isOfMetaType","meta","VERTEX","e","changeMode","modes","DIRECT_SELECT","featureId","featureTarget","parent","coordPath","coord_path","startPos","lngLat","ui","queueMapClasses","mouse","cursors","isActiveFeature","disable","isFeature","isShiftClick","isShiftDown","selectedFeatureIds","isFeatureSelected","isSelected","geojsonTypes","POINT","deselect","POINTER","select","originalEvent","stopPropagation","delta","lng","lat","bbox","container","featuresInBox","idsToSelect","boxSelect","isShiftMousedown","ADD","document","createElement","classList","classes","BOX_SELECT","appendChild","current","minX","Math","min","x","maxX","max","minY","y","maxY","translateValue","style","transform","WebkitTransform","width","height","geojson","push","active","activeStates","ACTIVE","INACTIVE","geometry","delete","coordinates","featuresCombined","i","includes","getCoordinates","subcoords","multiFeature","FEATURE","silent","COMBINE_FEATURES","createdFeatures","deletedFeatures","featuresUncombined","getFeatures","subFeature","UNCOMBINE_FEATURES"],"mappings":"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","sourcesContent":["const CommonSelectors = require('../lib/common_selectors');\nconst mouseEventPoint = require('../lib/mouse_event_point');\nconst featuresAt = require('../lib/features_at');\nconst createSupplementaryPoints = require('../lib/create_supplementary_points');\nconst StringSet = require('../lib/string_set');\nconst doubleClickZoom = require('../lib/double_click_zoom');\nconst moveFeatures = require('../lib/move_features');\nconst Constants = require('../constants');\nconst MultiFeature = require('../feature_types/multi_feature');\n\nmodule.exports = function(ctx, options = {}) {\n  let dragMoveLocation = null;\n  let boxSelectStartLocation = null;\n  let boxSelectElement;\n  let boxSelecting = false;\n  let canBoxSelect = false;\n  let dragMoving = false;\n  let canDragMove = false;\n\n  const initiallySelectedFeatureIds = options.featureIds || [];\n\n  const fireUpdate = function() {\n    ctx.map.fire(Constants.events.UPDATE, {\n      action: Constants.updateActions.MOVE,\n      features: ctx.store.getSelected().map(f => f.toGeoJSON())\n    });\n  };\n\n  const fireActionable = () => {\n    const selectedFeatures = ctx.store.getSelected();\n\n    const multiFeatures = selectedFeatures.filter(\n      feature => feature instanceof MultiFeature\n    );\n\n    let combineFeatures = false;\n\n    if (selectedFeatures.length > 1) {\n      combineFeatures = true;\n      const featureType = selectedFeatures[0].type.replace('Multi', '');\n      selectedFeatures.forEach(feature => {\n        if (feature.type.replace('Multi', '') !== featureType) {\n          combineFeatures = false;\n        }\n      });\n    }\n\n    const uncombineFeatures = multiFeatures.length > 0;\n    const trash = selectedFeatures.length > 0;\n\n    ctx.events.actionable({\n      combineFeatures, uncombineFeatures, trash\n    });\n  };\n\n  const getUniqueIds = function(allFeatures) {\n    if (!allFeatures.length) return [];\n    const ids = allFeatures.map(s => s.properties.id)\n      .filter(id => id !== undefined)\n      .reduce((memo, id) => {\n        memo.add(id);\n        return memo;\n      }, new StringSet());\n\n    return ids.values();\n  };\n\n  const stopExtendedInteractions = function() {\n    if (boxSelectElement) {\n      if (boxSelectElement.parentNode) boxSelectElement.parentNode.removeChild(boxSelectElement);\n      boxSelectElement = null;\n    }\n\n    ctx.map.dragPan.enable();\n\n    boxSelecting = false;\n    canBoxSelect = false;\n    dragMoving = false;\n    canDragMove = false;\n  };\n\n  return {\n    stop: function() {\n      doubleClickZoom.enable(ctx);\n    },\n    start: function() {\n      // Select features that should start selected,\n      // probably passed in from a `draw_*` mode\n      if (ctx.store) {\n        ctx.store.setSelected(initiallySelectedFeatureIds.filter(id => {\n          return ctx.store.get(id) !== undefined;\n        }));\n        fireActionable();\n      }\n\n      // Any mouseup should stop box selecting and dragMoving\n      this.on('mouseup', CommonSelectors.true, stopExtendedInteractions);\n\n      // On mousemove that is not a drag, stop extended interactions.\n      // This is useful if you drag off the canvas, release the button,\n      // then move the mouse back over the canvas --- we don't allow the\n      // interaction to continue then, but we do let it continue if you held\n      // the mouse button that whole time\n      this.on('mousemove', CommonSelectors.true, stopExtendedInteractions);\n\n      // As soon as you mouse leaves the canvas, update the feature\n      this.on('mouseout', () => dragMoving, fireUpdate);\n\n      // Click (with or without shift) on no feature\n      this.on('click', CommonSelectors.noTarget, function() {\n        // Clear the re-render selection\n        const wasSelected = ctx.store.getSelectedIds();\n        if (wasSelected.length) {\n          ctx.store.clearSelected();\n          wasSelected.forEach(id => this.render(id));\n        }\n        doubleClickZoom.enable(ctx);\n        stopExtendedInteractions();\n      });\n\n      // Click (with or without shift) on a vertex\n      this.on('click', CommonSelectors.isOfMetaType(Constants.meta.VERTEX), (e) => {\n        // Enter direct select mode\n        ctx.events.changeMode(Constants.modes.DIRECT_SELECT, {\n          featureId: e.featureTarget.properties.parent,\n          coordPath: e.featureTarget.properties.coord_path,\n          startPos: e.lngLat\n        });\n        ctx.ui.queueMapClasses({ mouse: Constants.cursors.MOVE });\n      });\n\n      // Mousedown on a selected feature\n      this.on('mousedown', CommonSelectors.isActiveFeature, function(e) {\n        // Stop any already-underway extended interactions\n        stopExtendedInteractions();\n\n        // Disable map.dragPan immediately so it can't start\n        ctx.map.dragPan.disable();\n\n        // Re-render it and enable drag move\n        this.render(e.featureTarget.properties.id);\n\n        // Set up the state for drag moving\n        canDragMove = true;\n        dragMoveLocation = e.lngLat;\n      });\n\n      // Click (with or without shift) on any feature\n      this.on('click', CommonSelectors.isFeature, function(e) {\n        // Stop everything\n        doubleClickZoom.disable(ctx);\n        stopExtendedInteractions();\n\n        const isShiftClick = CommonSelectors.isShiftDown(e);\n        const selectedFeatureIds = ctx.store.getSelectedIds();\n        const featureId = e.featureTarget.properties.id;\n        const isFeatureSelected = ctx.store.isSelected(featureId);\n\n        // Click (without shift) on any selected feature but a point\n        if (!isShiftClick && isFeatureSelected && ctx.store.get(featureId).type !== Constants.geojsonTypes.POINT) {\n          // Enter direct select mode\n          return ctx.events.changeMode(Constants.modes.DIRECT_SELECT, {\n            featureId: featureId\n          });\n        }\n\n        // Shift-click on a selected feature\n        if (isFeatureSelected && isShiftClick) {\n          // Deselect it\n          ctx.store.deselect(featureId);\n          ctx.ui.queueMapClasses({ mouse: Constants.cursors.POINTER });\n          if (selectedFeatureIds.length === 1) {\n            doubleClickZoom.enable(ctx);\n          }\n        // Shift-click on an unselected feature\n        } else if (!isFeatureSelected && isShiftClick) {\n          // Add it to the selection\n          ctx.store.select(featureId);\n          ctx.ui.queueMapClasses({ mouse: Constants.cursors.MOVE });\n        // Click (without shift) on an unselected feature\n        } else if (!isFeatureSelected && !isShiftClick) {\n          // Make it the only selected feature\n          selectedFeatureIds.forEach(this.render);\n          ctx.store.setSelected(featureId);\n          ctx.ui.queueMapClasses({ mouse: Constants.cursors.MOVE });\n        }\n\n        // No matter what, re-render the clicked feature\n        this.render(featureId);\n      });\n\n      // Dragging when drag move is enabled\n      this.on('drag', () => canDragMove, (e) => {\n        dragMoving = true;\n        e.originalEvent.stopPropagation();\n\n        const delta = {\n          lng: e.lngLat.lng - dragMoveLocation.lng,\n          lat: e.lngLat.lat - dragMoveLocation.lat\n        };\n\n        moveFeatures(ctx.store.getSelected(), delta);\n\n        dragMoveLocation = e.lngLat;\n      });\n\n      // Mouseup, always\n      this.on('mouseup', CommonSelectors.true, function(e) {\n        // End any extended interactions\n        if (dragMoving) {\n          fireUpdate();\n        } else if (boxSelecting) {\n          const bbox = [\n            boxSelectStartLocation,\n            mouseEventPoint(e.originalEvent, ctx.container)\n          ];\n          const featuresInBox = featuresAt(null, bbox, ctx);\n          const idsToSelect = getUniqueIds(featuresInBox)\n            .filter(id => !ctx.store.isSelected(id));\n\n          if (idsToSelect.length) {\n            ctx.store.select(idsToSelect);\n            idsToSelect.forEach(this.render);\n            ctx.ui.queueMapClasses({ mouse: Constants.cursors.MOVE });\n          }\n        }\n        stopExtendedInteractions();\n      });\n\n      if (ctx.options.boxSelect) {\n        // Shift-mousedown anywhere\n        this.on('mousedown', CommonSelectors.isShiftMousedown, (e) => {\n          stopExtendedInteractions();\n          ctx.map.dragPan.disable();\n          // Enable box select\n          boxSelectStartLocation = mouseEventPoint(e.originalEvent, ctx.container);\n          canBoxSelect = true;\n        });\n\n        // Drag when box select is enabled\n        this.on('drag', () => canBoxSelect, (e) => {\n          boxSelecting = true;\n          ctx.ui.queueMapClasses({ mouse: Constants.cursors.ADD });\n\n          // Create the box node if it doesn't exist\n          if (!boxSelectElement) {\n            boxSelectElement = document.createElement('div');\n            boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n            ctx.container.appendChild(boxSelectElement);\n          }\n\n          // Adjust the box node's width and xy position\n          const current = mouseEventPoint(e.originalEvent, ctx.container);\n          const minX = Math.min(boxSelectStartLocation.x, current.x);\n          const maxX = Math.max(boxSelectStartLocation.x, current.x);\n          const minY = Math.min(boxSelectStartLocation.y, current.y);\n          const maxY = Math.max(boxSelectStartLocation.y, current.y);\n          const translateValue = `translate(${minX}px, ${minY}px)`;\n          boxSelectElement.style.transform = translateValue;\n          boxSelectElement.style.WebkitTransform = translateValue;\n          boxSelectElement.style.width = `${maxX - minX}px`;\n          boxSelectElement.style.height = `${maxY - minY}px`;\n        });\n      }\n    },\n    render: function(geojson, push) {\n      geojson.properties.active = (ctx.store.isSelected(geojson.properties.id)) ?\n        Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n      push(geojson);\n      fireActionable();\n      if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n        geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n      createSupplementaryPoints(geojson).forEach(push);\n    },\n    trash: function() {\n      ctx.store.delete(ctx.store.getSelectedIds());\n      fireActionable();\n    },\n    combineFeatures: function() {\n      const selectedFeatures = ctx.store.getSelected();\n\n      if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n\n      const coordinates = [], featuresCombined = [];\n      const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n      for (let i = 0; i < selectedFeatures.length; i++) {\n        const feature = selectedFeatures[i];\n\n        if (feature.type.replace('Multi', '') !== featureType) {\n          return;\n        }\n        if (feature.type.includes('Multi')) {\n          feature.getCoordinates().forEach((subcoords) => {\n            coordinates.push(subcoords);\n          });\n        } else {\n          coordinates.push(feature.getCoordinates());\n        }\n\n        featuresCombined.push(feature.toGeoJSON());\n      }\n\n      if (featuresCombined.length > 1) {\n\n        const multiFeature = new MultiFeature(ctx, {\n          type: Constants.geojsonTypes.FEATURE,\n          properties: featuresCombined[0].properties,\n          geometry: {\n            type: `Multi${featureType}`,\n            coordinates: coordinates\n          }\n        });\n\n        ctx.store.add(multiFeature);\n        ctx.store.delete(ctx.store.getSelectedIds(), { silent: true });\n        ctx.store.setSelected([multiFeature.id]);\n\n        ctx.map.fire(Constants.events.COMBINE_FEATURES, {\n          createdFeatures: [multiFeature.toGeoJSON()],\n          deletedFeatures: featuresCombined\n        });\n      }\n      fireActionable();\n    },\n    uncombineFeatures: function() {\n      const selectedFeatures = ctx.store.getSelected();\n      if (selectedFeatures.length === 0) return;\n\n      const createdFeatures = [];\n      const featuresUncombined = [];\n\n      for (let i = 0; i < selectedFeatures.length; i++) {\n        const feature = selectedFeatures[i];\n\n        if (feature instanceof MultiFeature) {\n          feature.getFeatures().forEach((subFeature) => {\n            ctx.store.add(subFeature);\n            subFeature.properties = feature.properties;\n            createdFeatures.push(subFeature.toGeoJSON());\n            ctx.store.select([subFeature.id]);\n          });\n          ctx.store.delete(feature.id, { silent: true });\n          featuresUncombined.push(feature.toGeoJSON());\n        }\n      }\n\n      if (createdFeatures.length > 1) {\n        ctx.map.fire(Constants.events.UNCOMBINE_FEATURES, {\n          createdFeatures: createdFeatures,\n          deletedFeatures: featuresUncombined\n        });\n      }\n      fireActionable();\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"script"}