{"ast":null,"code":"const events = require('./events');\n\nconst Store = require('./store');\n\nconst ui = require('./ui');\n\nconst Constants = require('./constants');\n\nmodule.exports = function (ctx) {\n  ctx.events = events(ctx);\n  ctx.map = null;\n  ctx.container = null;\n  ctx.store = null;\n  ctx.ui = ui(ctx);\n  let controlContainer = null;\n  const setup = {\n    onRemove: function () {\n      setup.removeLayers();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n      return this;\n    },\n    onAdd: function (map) {\n      ctx.map = map;\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable(); // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      let intervalId = null;\n\n      const connect = () => {\n        map.off('load', connect);\n        clearInterval(intervalId);\n        setup.addLayers();\n        ctx.events.addEventListeners();\n      };\n\n      if (map.loaded()) {\n        connect();\n      } else {\n        map.on('load', connect);\n        intervalId = setInterval(() => {\n          if (map.loaded()) connect();\n        }, 16);\n      }\n\n      return controlContainer;\n    },\n    addLayers: function () {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      }); // hot features style\n\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n      ctx.options.styles.forEach(style => {\n        ctx.map.addLayer(style);\n      });\n      ctx.store.render();\n    },\n    removeLayers: function () {\n      ctx.options.styles.forEach(style => {\n        ctx.map.removeLayer(style.id);\n      });\n      ctx.map.removeSource(Constants.sources.COLD);\n      ctx.map.removeSource(Constants.sources.HOT);\n    }\n  };\n  ctx.setup = setup;\n  return setup;\n};","map":{"version":3,"sources":["/Users/jacquelinechen/Desktop/Mapbox/mapbox-react-tutorial/mapboxAndReact/node_modules/mapbox-gl-draw/src/setup.js"],"names":["events","require","Store","ui","Constants","module","exports","ctx","map","container","store","controlContainer","setup","onRemove","removeLayers","removeButtons","removeEventListeners","parentNode","removeChild","onAdd","getContainer","addButtons","options","boxSelect","boxZoom","disable","dragPan","enable","intervalId","connect","off","clearInterval","addLayers","addEventListeners","loaded","on","setInterval","addSource","sources","COLD","data","type","geojsonTypes","FEATURE_COLLECTION","features","HOT","styles","forEach","style","addLayer","render","removeLayer","id","removeSource"],"mappings":"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","sourcesContent":["const events = require('./events');\nconst Store = require('./store');\nconst ui = require('./ui');\nconst Constants = require('./constants');\n\nmodule.exports = function(ctx) {\n\n  ctx.events = events(ctx);\n\n  ctx.map = null;\n  ctx.container = null;\n  ctx.store = null;\n  ctx.ui = ui(ctx);\n\n  let controlContainer = null;\n\n  const setup = {\n    onRemove: function() {\n      setup.removeLayers();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    onAdd: function(map) {\n      ctx.map = map;\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      let intervalId = null;\n\n      const connect = () => {\n        map.off('load', connect);\n        clearInterval(intervalId);\n        setup.addLayers();\n        ctx.events.addEventListeners();\n      };\n\n      if (map.loaded()) {\n        connect();\n      } else {\n        map.on('load', connect);\n        intervalId = setInterval(() => { if (map.loaded()) connect(); }, 16);\n      }\n\n      return controlContainer;\n    },\n    addLayers: function() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach(style => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.render();\n    },\n    removeLayers: function() {\n      ctx.options.styles.forEach(style => {\n        ctx.map.removeLayer(style.id);\n      });\n\n      ctx.map.removeSource(Constants.sources.COLD);\n      ctx.map.removeSource(Constants.sources.HOT);\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n};\n"]},"metadata":{},"sourceType":"script"}